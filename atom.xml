<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mrh929&#39;s home</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mrh1s.top/"/>
  <updated>2019-05-11T12:46:14.421Z</updated>
  <id>https://mrh1s.top/</id>
  
  <author>
    <name>mrh929</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>simple_machine</title>
    <link href="https://mrh1s.top/posts/5f4cc17f/"/>
    <id>https://mrh1s.top/posts/5f4cc17f/</id>
    <published>2019-05-11T12:45:32.000Z</published>
    <updated>2019-05-11T12:46:14.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="simple-machine"><a href="#simple-machine" class="headerlink" title="simple-machine"></a>simple-machine</h1><h2 id="思路整理"><a href="#思路整理" class="headerlink" title="思路整理"></a>思路整理</h2><h3 id="general"><a href="#general" class="headerlink" title="general"></a>general</h3><p>这道题说起来是vm，实际上和vm的挂钩并不大，就是用高级语言去实现了汇编，把变量都当做了寄存器来使用，其中还有各种压栈出栈过程，不过跟本题关系不大，也就不用过于细究了</p><h3 id="fun1"><a href="#fun1" class="headerlink" title="fun1"></a>fun1</h3><p>fun1主要是通过输入的字符串，与预置的feed进行异或，得到一串加密的字符串，存在内存中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">fun1</span><span class="params">(<span class="keyword">int</span> str, <span class="keyword">unsigned</span> <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v2; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// eax</span></span><br><span class="line"></span><br><span class="line">  push(base_addr_804B15C);</span><br><span class="line">  base_addr_804B15C = esp1;</span><br><span class="line">  push(temp);</span><br><span class="line">  push(temp2);</span><br><span class="line">  esp1 -= <span class="number">48</span>;</span><br><span class="line">  *(_DWORD *)(base_addr_804B15C - 29) = 'deef'; // 0x804B13F</span><br><span class="line">  *(_DWORD *)(base_addr_804B15C - 25) = 'daed';</span><br><span class="line">  *(_DWORD *)(base_addr_804B15C - 21) = 'feeb';</span><br><span class="line">  *(_DWORD *)(base_addr_804B15C - 17) = 'efac';</span><br><span class="line">  *(_BYTE *)(base_addr_804B15C - <span class="number">13</span>) = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( *(_DWORD *)(base_addr_804B15C - <span class="number">12</span>) = <span class="number">0</span>; ; ++*(_DWORD *)(base_addr_804B15C - <span class="number">12</span>) )<span class="comment">// i = base_addr_804B15C - 12</span></span><br><span class="line">  &#123;</span><br><span class="line">    eaxx = *(_DWORD *)(base_addr_804B15C - <span class="number">12</span>); <span class="comment">// i</span></span><br><span class="line">    <span class="keyword">if</span> ( eaxx &gt;= a2 )</span><br><span class="line">      <span class="keyword">break</span>;                                    <span class="comment">// 判断是否退出循环</span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">    ebxx = *(_DWORD *)(base_addr_804B15C - <span class="number">12</span>); <span class="comment">// i</span></span><br><span class="line">    eaxx = str;                                 <span class="comment">// str</span></span><br><span class="line">    temp = ebxx + str;                          <span class="comment">// str + i</span></span><br><span class="line">    ebxx = *(_DWORD *)(base_addr_804B15C - <span class="number">12</span>); <span class="comment">// i</span></span><br><span class="line">    eaxx = ebxx + str;                          <span class="comment">// str + i</span></span><br><span class="line">    eaxx = *(<span class="keyword">unsigned</span> __int8 *)(ebxx + str);    <span class="comment">// 取当前字符串</span></span><br><span class="line">    temp1 = eaxx;</span><br><span class="line">    *(_BYTE *)(base_addr_804B15C - <span class="number">41</span>) = eaxx;  <span class="comment">// 把当前字符串保存到一个地址里面</span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">                                                <span class="comment">// </span></span><br><span class="line">    temp2 = *(_DWORD *)(base_addr_804B15C - <span class="number">12</span>);</span><br><span class="line">    esp1 -= <span class="number">12</span>;</span><br><span class="line">    eaxx = base_addr_804B15C - <span class="number">29</span>;              <span class="comment">// 取feed</span></span><br><span class="line">    push(base_addr_804B15C - <span class="number">29</span>);               <span class="comment">// push(feed)</span></span><br><span class="line">    v2 = <span class="built_in">strlen</span>(*(<span class="keyword">const</span> <span class="keyword">char</span> **)esp1);          <span class="comment">// v2 是 feed的长度</span></span><br><span class="line">    esp1 += <span class="number">16</span>;</span><br><span class="line">    len = v2;</span><br><span class="line">    eaxx = temp2;</span><br><span class="line">    ebxx = <span class="number">0</span>;</span><br><span class="line">    sub_80485AB(v2);                            <span class="comment">// j = i % v2  </span></span><br><span class="line">                                                <span class="comment">// i = i / v2</span></span><br><span class="line">    eaxx = ebxx;</span><br><span class="line">    eaxx = *(<span class="keyword">unsigned</span> __int8 *)(ebxx - <span class="number">29</span> + base_addr_804B15C);<span class="comment">// 算feed中的偏移</span></span><br><span class="line">    temp1 = eaxx;</span><br><span class="line">    temp1 = *(_BYTE *)(base_addr_804B15C - <span class="number">41</span>) ^ eaxx;<span class="comment">// c ^ feed[]</span></span><br><span class="line">    *(_BYTE *)temp = temp1;</span><br><span class="line">    v3 = eaxx;</span><br><span class="line">    LOBYTE(v3) = <span class="number">0</span>;</span><br><span class="line">    eaxx = v3 + (<span class="keyword">unsigned</span> __int8)temp1;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_80485A5();</span><br><span class="line">  esp1 = base_addr_804B15C - <span class="number">8</span>;</span><br><span class="line">  pop(&amp;temp2);</span><br><span class="line">  pop(&amp;temp);</span><br><span class="line">  <span class="keyword">return</span> pop(&amp;base_addr_804B15C);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fun2"><a href="#fun2" class="headerlink" title="fun2"></a>fun2</h3><p>fun2中有两个循环，看似很复杂实则简单</p><p>看到两个寄存器在之间移来移去，发现很多操作都是无效的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __<span class="function">cdecl <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  push(base_addr_804B15C);</span><br><span class="line">  base_addr_804B15C = esp1;</span><br><span class="line">  esp1 -= <span class="number">16</span>;</span><br><span class="line">  <span class="keyword">for</span> ( *(_DWORD *)(base_addr_804B15C - <span class="number">4</span>) = <span class="number">0</span>; <span class="comment">// 循环三次</span></span><br><span class="line">        *(_DWORD *)(base_addr_804B15C - <span class="number">4</span>) &lt;= <span class="number">2u</span>;</span><br><span class="line">        ++*(_DWORD *)(base_addr_804B15C - <span class="number">4</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( *(_DWORD *)(base_addr_804B15C - <span class="number">8</span>) = <span class="number">0</span>; ; ++*(_DWORD *)(base_addr_804B15C - <span class="number">8</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">      len = a3;</span><br><span class="line">      ebxx = <span class="number">1431655766</span>;</span><br><span class="line">      eaxx = a3;</span><br><span class="line">      sub_80485DB(<span class="number">1431655766</span>);                  <span class="comment">// ebxx = (eaxx * 1431655766) &gt;&gt; 32</span></span><br><span class="line">      ebxx -= (<span class="keyword">unsigned</span> <span class="keyword">int</span>)len &gt;&gt; <span class="number">31</span>;</span><br><span class="line">      eaxx = ebxx;</span><br><span class="line">      <span class="keyword">if</span> ( *(_DWORD *)(base_addr_804B15C - <span class="number">8</span>) &gt;= (<span class="keyword">unsigned</span> <span class="keyword">int</span>)ebxx )</span><br><span class="line">        <span class="keyword">break</span>;                                  <span class="comment">// 前面一段是关于判断跳出条件的</span></span><br><span class="line">      len = a3;</span><br><span class="line">      ebxx = <span class="number">0x55555556</span>;</span><br><span class="line">      eaxx = a3;</span><br><span class="line">      sub_80485DB(<span class="number">0x55555556</span>);                  <span class="comment">// ebxx = (unsigned __int64)(a1 * (signed __int64)eaxx) &gt;&gt; 32;</span></span><br><span class="line">                                                <span class="comment">//   </span></span><br><span class="line">      ebxx -= (<span class="keyword">unsigned</span> <span class="keyword">int</span>)len &gt;&gt; <span class="number">31</span>;</span><br><span class="line">      eaxx = ebxx;                              <span class="comment">// repeated</span></span><br><span class="line">      eaxx = ebxx * *(_DWORD *)(base_addr_804B15C - <span class="number">4</span>);</span><br><span class="line">      ebxx = eaxx;</span><br><span class="line">      eaxx = *(_DWORD *)(base_addr_804B15C - <span class="number">8</span>);</span><br><span class="line">      eaxx += ebxx;</span><br><span class="line">      ebxx = eaxx;</span><br><span class="line">      eaxx = a2;</span><br><span class="line">      len = ebxx + a2;                          <span class="comment">// 算偏移地址 addr = 0x804B100 + (i * 18) + j</span></span><br><span class="line">      ebxx = *(_DWORD *)(base_addr_804B15C - <span class="number">8</span>);</span><br><span class="line">      eaxx = <span class="number">2</span> * ebxx;                          <span class="comment">// j * 2</span></span><br><span class="line">      ebxx *= <span class="number">3</span>;                                <span class="comment">// j * 3</span></span><br><span class="line">      eaxx = *(_DWORD *)(base_addr_804B15C - <span class="number">4</span>);<span class="comment">// i</span></span><br><span class="line">      eaxx += ebxx;                             <span class="comment">// i +  j * 3</span></span><br><span class="line">      ebxx = eaxx;                              <span class="comment">// i +  j * 3</span></span><br><span class="line">      eaxx += a1;</span><br><span class="line">      eaxx = *(<span class="keyword">unsigned</span> __int8 *)(a1 + ebxx);   <span class="comment">// *(input + i + j * 3)</span></span><br><span class="line">      temp1 = eaxx;</span><br><span class="line">      *(_BYTE *)len = eaxx;                     <span class="comment">// 修改上方的那个偏移地址</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_80485A5();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>翻译过来是这样： </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;;j++)&#123;</span><br><span class="line">        addr[(i * <span class="number">18</span>) + j] = input + i + j * <span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p><del>比较fun1和fun2中生成的字符串是否相等</del></p><p>经高人指点，不是比较fun1和fun2的字符串，而是先经过fun1进行处理，然后再经过fun2处理，然后直接和内存中的一串字符串进行比较</p><h2 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">feed = <span class="string">"feeddeadbeefcafe"</span></span><br><span class="line">enc = [<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x09</span>,<span class="number">0x3A</span>,<span class="number">0x05</span>,<span class="number">0x0E</span>,<span class="number">0x02</span>,<span class="number">0x16</span>,<span class="number">0x0F</span>,<span class="number">0x1F</span>,<span class="number">0x12</span>,<span class="number">0x56</span>,<span class="number">0x3B</span>,<span class="number">0x0B</span>,<span class="number">0x51</span>,<span class="number">0x50</span>,<span class="number">0x39</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x1F</span>,<span class="number">0x50</span>,<span class="number">0x04</span>,<span class="number">0x14</span>,<span class="number">0x57</span>,<span class="number">0x3B</span>,<span class="number">0x12</span>,<span class="number">0x07</span>,<span class="number">0x3C</span>,<span class="number">0x1C</span>,<span class="number">0x3A</span>,<span class="number">0x15</span>,<span class="number">0x05</span>,<span class="number">0x0B</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x12</span>,<span class="number">0x16</span>,<span class="number">0x39</span>,<span class="number">0x05</span>,<span class="number">0x0B</span>,<span class="number">0x50</span>,<span class="number">0x57</span>,<span class="number">0x09</span>,<span class="number">0x12</span>,<span class="number">0x0A</span>,<span class="number">0x27</span>,<span class="number">0x13</span>,<span class="number">0x17</span>,<span class="number">0x0E</span>,<span class="number">0x02</span>,<span class="number">0x55</span>,<span class="number">0x18</span>]</span><br><span class="line">dec = [<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x09</span>,<span class="number">0x3A</span>,<span class="number">0x05</span>,<span class="number">0x0E</span>,<span class="number">0x02</span>,<span class="number">0x16</span>,<span class="number">0x0F</span>,<span class="number">0x1F</span>,<span class="number">0x12</span>,<span class="number">0x56</span>,<span class="number">0x3B</span>,<span class="number">0x0B</span>,<span class="number">0x51</span>,<span class="number">0x50</span>,<span class="number">0x39</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x1F</span>,<span class="number">0x50</span>,<span class="number">0x04</span>,<span class="number">0x14</span>,<span class="number">0x57</span>,<span class="number">0x3B</span>,<span class="number">0x12</span>,<span class="number">0x07</span>,<span class="number">0x3C</span>,<span class="number">0x1C</span>,<span class="number">0x3A</span>,<span class="number">0x15</span>,<span class="number">0x05</span>,<span class="number">0x0B</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x04</span>,<span class="number">0x12</span>,<span class="number">0x16</span>,<span class="number">0x39</span>,<span class="number">0x05</span>,<span class="number">0x0B</span>,<span class="number">0x50</span>,<span class="number">0x57</span>,<span class="number">0x09</span>,<span class="number">0x12</span>,<span class="number">0x0A</span>,<span class="number">0x27</span>,<span class="number">0x13</span>,<span class="number">0x17</span>,<span class="number">0x0E</span>,<span class="number">0x02</span>,<span class="number">0x55</span>,<span class="number">0x18</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">18</span>):</span><br><span class="line">        dec[i + j * <span class="number">3</span>] = enc[i * <span class="number">18</span> + j]</span><br><span class="line"></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">54</span>):</span><br><span class="line">    dec[i] ^= ord(feed[i % <span class="number">16</span>])</span><br><span class="line">    ans = ans + chr(dec[i])</span><br><span class="line"></span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write-up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="cgctf" scheme="https://mrh1s.top/categories/write-up/cgctf/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="VM" scheme="https://mrh1s.top/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>多并发编程尝试</title>
    <link href="https://mrh1s.top/posts/db7779bb/"/>
    <id>https://mrh1s.top/posts/db7779bb/</id>
    <published>2019-05-08T14:20:36.000Z</published>
    <updated>2019-05-08T14:26:55.974Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>经查资料，多并发编程需要用到一个库</p><blockquote><p>#include &lt; thread&gt;</p><p>using namespace std;</p></blockquote><p>线程初始化：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="function">thread <span class="title">t</span><span class="params">(fun)</span></span>;<span class="comment">//fun为要多线程运行的函数</span></span><br></pre></td></tr></table></figure><p>等待线程终止：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t.join();<span class="comment">//等待名为t的函数终止运行</span></span><br></pre></td></tr></table></figure><p>如下实现了先启动输出first的线程，但由于多并发，second先输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pch.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; // std::cout</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;   // std::thread</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">thread_task</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"first"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">thread <span class="title">t</span><span class="params">(thread_task)</span></span>;  </span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"second"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">t.join();</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="c-learn" scheme="https://mrh1s.top/categories/c-learn/"/>
    
    
  </entry>
  
  <entry>
    <title>homuraVM</title>
    <link href="https://mrh1s.top/posts/f22525af/"/>
    <id>https://mrh1s.top/posts/f22525af/</id>
    <published>2019-05-07T15:22:42.000Z</published>
    <updated>2019-05-07T15:57:03.291Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HomuraVM"><a href="#HomuraVM" class="headerlink" title="HomuraVM"></a>HomuraVM</h1><blockquote><p>太丢脸了，这么简单一个vm还是做了三个多小时</p></blockquote><p><a href="\uploads\homuraVM.7z">homuraVM</a></p><h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><p>这道题是WxyVM的一个加强版，即使把vm的指令翻译出来了，也会发现得到的是一串鸟语，俗称类brainf**k语言</p><p>程序的大概思路是这样的，读入一串数据，然后把这段数据载入内存，随后执行保存在程序里面的一段虚拟机代码，虚拟机的各种函数已经给出，最终生成的加密结果也能找到，逆向程序。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="对vm的代码进行读取"><a href="#对vm的代码进行读取" class="headerlink" title="对vm的代码进行读取"></a>对vm的代码进行读取</h3><p>自己写的IDA中的注释：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    result = *(<span class="keyword">unsigned</span> __int8 *)(COUNTER + a1);</span><br><span class="line">    <span class="keyword">if</span> ( !(_BYTE)result )                       <span class="comment">// 没有指令了 就退出</span></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    v2 = *(<span class="keyword">char</span> *)(COUNTER + a1);</span><br><span class="line">    <span class="keyword">switch</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)off_1048 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x43</span>u:                               <span class="comment">// *j -= 2 * (*i &amp; *a)    C</span></span><br><span class="line">        *(_DWORD *)global_j -= <span class="number">2</span> * (*(_DWORD *)global_i &amp; *(_DWORD *)array_input);</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x47</span>u:                               <span class="comment">// (*j)--              G</span></span><br><span class="line">        --*(_DWORD *)global_j;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x4D</span>u:                               <span class="comment">// *j = *i + a[0]                  M</span></span><br><span class="line">        *(_DWORD *)global_j = *(_DWORD *)global_i + *(_DWORD *)array_input;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x54</span>u:                               <span class="comment">// (*j)++            T</span></span><br><span class="line">        ++*(_DWORD *)global_j;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x5B</span>u:                               <span class="comment">// 如果a[0]!=0 就循环，否则直接跳出    [</span></span><br><span class="line">        <span class="keyword">if</span> ( *(_DWORD *)array_input )</span><br><span class="line">        &#123;</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">            v3 = COUNTER++;</span><br><span class="line">          <span class="keyword">while</span> ( *(_BYTE *)(v3 + a1) != <span class="number">93</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x5D</span>u:                               <span class="comment">// 如果a[0]!=0 就返回[继续循环           ]</span></span><br><span class="line">        <span class="keyword">if</span> ( *(_DWORD *)array_input )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">            --COUNTER;</span><br><span class="line">          <span class="keyword">while</span> ( *(_BYTE *)(COUNTER + a1) != <span class="number">91</span> );</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x61</span>u:                               <span class="comment">// (*i)--          a</span></span><br><span class="line">        --*(_DWORD *)global_i;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x68</span>u:                               <span class="comment">// a[0] += 4       h</span></span><br><span class="line">        array_input = (<span class="keyword">char</span> *)array_input + <span class="number">4</span>;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x6D</span>u:                               <span class="comment">// a[0]自加         m</span></span><br><span class="line">        ++*(_DWORD *)array_input;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x6F</span>u:                               <span class="comment">// a[0] -= 4          o</span></span><br><span class="line">        array_input = (<span class="keyword">char</span> *)array_input - <span class="number">4</span>;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x72</span>u:                               <span class="comment">// (*i)++        r</span></span><br><span class="line">        ++*(_DWORD *)global_i;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x75</span>u:                               <span class="comment">// a[0]--         u</span></span><br><span class="line">        --*(_DWORD *)array_input;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x76</span>u:                               <span class="comment">// j = i             v</span></span><br><span class="line">        *(_DWORD *)global_j = *(_DWORD *)global_i;</span><br><span class="line">        ++COUNTER;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x7B</span>u:</span><br><span class="line">        <span class="keyword">if</span> ( *(_DWORD *)global_j )              <span class="comment">// *j !=0 就进入循环，否则直接跳出</span></span><br><span class="line">        &#123;</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">            v4 = COUNTER++;</span><br><span class="line">          <span class="keyword">while</span> ( *(_BYTE *)(v4 + a1) != <span class="number">125</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x7D</span>u:</span><br><span class="line">        <span class="keyword">if</span> ( *(_DWORD *)global_j )              <span class="comment">// 如果*j不为0就返回&#123;处</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">            --COUNTER;</span><br><span class="line">          <span class="keyword">while</span> ( *(_BYTE *)(COUNTER + a1) != <span class="number">123</span> );</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          ++COUNTER;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="清除无用虚拟机指令"><a href="#清除无用虚拟机指令" class="headerlink" title="清除无用虚拟机指令"></a>清除无用虚拟机指令</h3><p>首先我尝试着把无效命令先清除掉:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">"""h[ur]ovMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaaaMCh&#123;mG&#125;hv&#123;aG&#125;[ur]</span></span><br><span class="line"><span class="string">ovrrMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrararaMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrarar</span></span><br><span class="line"><span class="string">rrMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovararaaMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrararra</span></span><br><span class="line"><span class="string">raMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrrarrrMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarrar</span></span><br><span class="line"><span class="string">rMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaaarrarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrrarrM</span></span><br><span class="line"><span class="string">Ch&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarrraaMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovarraarMCh</span></span><br><span class="line"><span class="string">&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrraaarrMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaaarrrrarr</span></span><br><span class="line"><span class="string">MCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrrraarrarrMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrar</span></span><br><span class="line"><span class="string">raMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaaraarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrarraM</span></span><br><span class="line"><span class="string">Ch&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarrrarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrraarraMC</span></span><br><span class="line"><span class="string">h&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarrarMCh&#123;mG&#125;</span></span><br><span class="line"><span class="string">hv&#123;aG&#125;[ur]ovrrraarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrrraaMCh&#123;mG&#125;hv&#123;</span></span><br><span class="line"><span class="string">aG&#125;[ur]ovrrarraMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrrrrrMCh&#123;mG&#125;hv&#123;aG&#125;</span></span><br><span class="line"><span class="string">[ur]ovaaaarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrraaaMCh&#123;mG&#125;hv&#123;aG&#125;[ur]o</span></span><br><span class="line"><span class="string">vaarraMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovrrarMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarra</span></span><br><span class="line"><span class="string">aMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarraraMCh&#123;mG&#125;hv&#123;aG&#125;[ur]ovaarrara</span></span><br><span class="line"><span class="string">rMCh&#123;mG&#125;"""</span></span><br><span class="line"></span><br><span class="line">str = str.replace(<span class="string">"\n"</span>, <span class="string">""</span>)</span><br><span class="line">old = <span class="string">""</span></span><br><span class="line"><span class="keyword">while</span>(old != str):</span><br><span class="line">    old = str</span><br><span class="line">    str = str.replace(<span class="string">"ra"</span>, <span class="string">""</span>)</span><br><span class="line">    str = str.replace(<span class="string">"ar"</span>, <span class="string">""</span>)</span><br><span class="line">    str = str.replace(<span class="string">"oh"</span>, <span class="string">""</span>)</span><br><span class="line">    str = str.replace(<span class="string">"ho"</span>, <span class="string">""</span>)</span><br><span class="line">    str = str.replace(<span class="string">"um"</span>, <span class="string">""</span>)</span><br><span class="line">    str = str.replace(<span class="string">"mu"</span>, <span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n\n\n"</span>)</span><br><span class="line">h_cnt = <span class="number">0</span></span><br><span class="line">o_cnt = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> str:</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="string">'h'</span>):</span><br><span class="line">        h_cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(h_cnt == <span class="number">3</span>):</span><br><span class="line">            h_cnt = <span class="number">1</span></span><br><span class="line">            o_cnt = <span class="number">0</span></span><br><span class="line">            print(<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">elif</span>(c == <span class="string">'o'</span>):</span><br><span class="line">        o_cnt += <span class="number">1</span></span><br><span class="line">    print(c, end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p>可得以下字符串（VScode显示有点问题，打印到文件中就行）</p><blockquote><p>h[ur]ovMCh{mG}<br>hv{aG}[ur]ovaaaMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovMCh{mG}<br>hv{aG}[ur]ovrrrMCh{mG}<br>hv{aG}[ur]ovaaMCh{mG}<br>hv{aG}[ur]ovrMCh{mG}<br>hv{aG}[ur]ovrrrrrMCh{mG}<br>hv{aG}[ur]ovrMCh{mG}<br>hv{aG}[ur]ovaMCh{mG}<br>hv{aG}[ur]ovrrrrMCh{mG}<br>hv{aG}[ur]ovaMCh{mG}<br>hv{aG}[ur]ovMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrrrrrMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovaaMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrMCh{mG}<br>hv{aG}[ur]ovrMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovrrrrrrMCh{mG}<br>hv{aG}[ur]ovaaaMCh{mG}<br>hv{aG}[ur]ovaMCh{mG}<br>hv{aG}[ur]ovaMCh{mG}<br>hv{aG}[ur]ovrrMCh{mG}<br>hv{aG}[ur]ovaaMCh{mG}<br>hv{aG}[ur]ovaMCh{mG}<br>hv{aG}[ur]ovMCh{mG}</p></blockquote><h3 id="得到正向算法（递推公式）"><a href="#得到正向算法（递推公式）" class="headerlink" title="得到正向算法（递推公式）"></a>得到正向算法（递推公式）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MCh&#123;mG&#125;hv&#123;aG&#125;[ur]ov</span></span><br><span class="line">*j = *i + *a - <span class="number">2</span> * (*i &amp; *a)</span><br><span class="line">    </span><br><span class="line"><span class="comment">//&#123;mG&#125;:   *a += j  j清空</span></span><br><span class="line"><span class="keyword">while</span>(*j):</span><br><span class="line">    *a++</span><br><span class="line">    *j--</span><br><span class="line">        </span><br><span class="line"><span class="comment">//&#123;aG&#125;:    i -= j  j清空 </span></span><br><span class="line"><span class="keyword">while</span>(*j):</span><br><span class="line">    *i--</span><br><span class="line">    *j--</span><br><span class="line">        </span><br><span class="line"><span class="comment">//[ur]:   i = *a   a清空</span></span><br><span class="line"><span class="keyword">while</span>(*a)  </span><br><span class="line">    *a--</span><br><span class="line">    *i++</span><br><span class="line">    </span><br><span class="line"><span class="comment">//r:</span></span><br><span class="line">    *i++</span><br><span class="line"><span class="comment">//a:</span></span><br><span class="line">    *i--</span><br><span class="line"><span class="comment">//v:</span></span><br><span class="line">    j = i</span><br></pre></td></tr></table></figure><p>经过研究</p><blockquote><p>“v{ag}”       没有起到任何作用，</p><p>“v” 将i的值取到了j中</p><p>然后i和j一同被清空了</p></blockquote><blockquote><p>“ov”中的“v”也没有起到作用，因为在后面j的值会被刷新</p></blockquote><p>再次精简：（去掉v{aG}  ）</p><blockquote><p>h[ur]oMCh{mG}<br>h[ur]oaaaMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]oMCh{mG}<br>h[ur]orrrMCh{mG}<br>h[ur]oaaMCh{mG}<br>h[ur]orMCh{mG}<br>h[ur]orrrrrMCh{mG}<br>h[ur]orMCh{mG}<br>h[ur]oaMCh{mG}<br>h[ur]orrrrMCh{mG}<br>h[ur]oaMCh{mG}<br>h[ur]oMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orrrrrMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]oaaMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orMCh{mG}<br>h[ur]orMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]oMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]orrrrrrMCh{mG}<br>h[ur]oaaaMCh{mG}<br>h[ur]oaMCh{mG}<br>h[ur]oaMCh{mG}<br>h[ur]orrMCh{mG}<br>h[ur]oaaMCh{mG}<br>h[ur]oaMCh{mG}<br>h[ur]oMCh{mG}</p></blockquote><blockquote><p>即</p><p>h 指针加一</p><p>[ur] 将*(a+1)全部转移到 i 中</p><p>o 指针减一</p><p>ar index改变    i = *(a+1) + index</p><p>M     j = <em>(a+1) + index +   </em>a</p><p>C    j  -=   ((<em>(a+1) + index) &amp; </em>a) * 2</p><p>MC:     j = <em>(a+1) + index  +  </em>a  -   (( <em>(a+1) + index) &amp; </em>a) * 2</p><p>h 指针加一</p><p>{mG}  把j的内容放到*(a+1)</p></blockquote><p><strong>递推公式：new(<em>(a+1)) = </em>(a+1) + index +   <em>a -  (( </em>( a+1) + index) &amp; <em>a) </em> 2</strong></p><p>(index为 一大堆rraa 最后得到的值)</p><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p>知道了<em>(a+1)    后面的新值，知道了    </em>(a+1) ，要求原来的 *(a+1)的值，只能通过枚举</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">enc = [<span class="number">27</span>, <span class="number">114</span>, <span class="number">17</span>, <span class="number">118</span>, <span class="number">8</span>, <span class="number">74</span>, <span class="number">126</span>, <span class="number">5</span>, <span class="number">55</span>, <span class="number">124</span>, <span class="number">31</span>, <span class="number">88</span>, <span class="number">104</span>, <span class="number">7</span>,</span><br><span class="line"><span class="number">112</span>, <span class="number">7</span>, <span class="number">49</span>, <span class="number">108</span>, <span class="number">4</span>, <span class="number">47</span>, <span class="number">4</span>, <span class="number">105</span>, <span class="number">54</span>, <span class="number">77</span>, <span class="number">127</span>, <span class="number">8</span>, <span class="number">80</span>, <span class="number">12</span>, <span class="number">109</span>, <span class="number">28</span>, <span class="number">127</span>, <span class="number">80</span>, <span class="number">29</span>, <span class="number">96</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">index = []</span><br><span class="line">f = open(<span class="string">"index.txt"</span>, <span class="string">"r"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">34</span>):</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    s = f.readline()</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">'r'</span>):</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">'a'</span>):</span><br><span class="line">            cnt -= <span class="number">1</span></span><br><span class="line">    index.append(cnt)</span><br><span class="line"></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">if</span>(enc[i] == c + index[i] + enc[i<span class="number">-1</span>] - <span class="number">2</span> * ((c + index[i]) &amp; enc[i<span class="number">-1</span>])):</span><br><span class="line">            ans = chr(c) + ans</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure><p>输出：lag{D3v1L_H0mur4_f**k_y0uR_bra1N}</p><p>由于如下代码（IDA dump出来的）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">__isoc99_scanf(<span class="string">"%s"</span>, s);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v3 = i;</span><br><span class="line">    <span class="keyword">if</span> ( v3 &gt;= <span class="built_in">strlen</span>(s) )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    *((_DWORD *)array_input + i + <span class="number">1L</span>L) = s[i];</span><br><span class="line">  &#125;</span><br><span class="line">  *(_DWORD *)array_input = s[<span class="built_in">strlen</span>(s) - <span class="number">1</span>];    <span class="comment">// 读取方式有点奇怪，最后一个字符放在开头的</span></span><br></pre></td></tr></table></figure><p>输入的字符串并没有按照顺序存储，而是将输入的最后一个字符放到了内存开头，说明之后的操作全部都是从第二位开始的</p><p>通过最后一位和第一位的值同样可以逆推出原值，直接根据格式猜也行，flag嘛缺个”f”hhhh</p><p>flag{D3v1L_H0mur4_f**k_y0uR_bra1N}</p><p>​    <strong>本题用到了程序语言的化简，还有寻找规律的相关方法，遇到这样的题最好是先自己模拟一个循环节，找到规律再尝试写脚本解。因为并不是所有的虚拟机都是每步操作都可逆的23333</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write-up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="cgctf" scheme="https://mrh1s.top/categories/write-up/cgctf/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="VM" scheme="https://mrh1s.top/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>学生信息管理系统</title>
    <link href="https://mrh1s.top/posts/a4a48694/"/>
    <id>https://mrh1s.top/posts/a4a48694/</id>
    <published>2019-05-06T11:05:19.000Z</published>
    <updated>2019-05-06T11:12:45.933Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="\uploads\store-grades.docx">store-grades.docx</a></p><blockquote><p>丢人现眼的大一下数据结构项目（我脸皮厚还是放网站上来存个档吧</p></blockquote><p>用链表实现了对学生信息的读取，存储，排序的功能。</p><p>主要数据结构：链表，算法：冒泡排序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> sno[<span class="number">12</span>];</span><br><span class="line">    <span class="keyword">char</span> sname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> sex[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">char</span> major[<span class="number">20</span>];</span><br><span class="line">    Student *next; <span class="comment">//指向后继数据结点</span></span><br><span class="line">&#125;*StudentList;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Course</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> cno[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> cname[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> classHours;</span><br><span class="line">Course *next;</span><br><span class="line">&#125;*CourseList;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Grade</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> sno[<span class="number">12</span>];</span><br><span class="line">    <span class="keyword">char</span> cno[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> score ;</span><br><span class="line">    Grade *next;</span><br><span class="line">&#125;*GradeList;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">struct allinfo&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">FILE *<span class="title">Open_File</span><span class="params">(<span class="keyword">int</span> who, <span class="keyword">int</span> rw)</span></span>&#123;<span class="comment">//打开哪个文件，打开方式如何 </span></span><br><span class="line">FILE *p;</span><br><span class="line"><span class="keyword">switch</span>(who)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line"><span class="keyword">if</span>(rw) p = fopen(<span class="string">"student.dat"</span>,<span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">else</span> p = fopen(<span class="string">"student.dat"</span>,<span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line"><span class="keyword">if</span>(rw) p = fopen(<span class="string">"course.dat"</span>,<span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">else</span> p = fopen(<span class="string">"course.dat"</span>,<span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line"><span class="keyword">if</span>(rw) p = fopen(<span class="string">"courseGrade.dat"</span>,<span class="string">"w"</span>);</span><br><span class="line"><span class="keyword">else</span> p = fopen(<span class="string">"courseGrade.dat"</span>,<span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 以下是关于学生的代码 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Student* <span class="title">Read_Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *StuFile = Open_File(<span class="number">1</span>, <span class="number">0</span>);<span class="comment">//read</span></span><br><span class="line">Student *head = (Student *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Student));</span><br><span class="line">Student *pre = head;</span><br><span class="line"><span class="keyword">while</span>(!feof(StuFile))&#123;</span><br><span class="line">Student *p = (Student *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Student));</span><br><span class="line"><span class="built_in">fscanf</span>(StuFile, <span class="string">"%s%s%s%s"</span>, p-&gt;sno, p-&gt;sname, p-&gt;sex, p-&gt;major);</span><br><span class="line">pre-&gt;next = p;</span><br><span class="line">pre = p;</span><br><span class="line">&#125;</span><br><span class="line">pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">fclose(StuFile);</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_Student</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">Student *p = StudentList-&gt;next;</span><br><span class="line">Student *pre = StudentList;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span> &amp;&amp; p-&gt;next != <span class="literal">NULL</span> )&#123;<span class="comment">//存在两个可以比较的结点 </span></span><br><span class="line">Student *pnext = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;sno, pnext-&gt;sno) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">pre-&gt;next = pnext;</span><br><span class="line">p-&gt;next = pnext-&gt;next;</span><br><span class="line">pnext-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">pre = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">Student *p = StudentList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nStudentList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %s %s"</span>, p-&gt;sno, p-&gt;sname, p-&gt;sex, p-&gt;major);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Write_Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *StuFile = Open_File(<span class="number">1</span>, <span class="number">1</span>);<span class="comment">//write</span></span><br><span class="line">Student *p = (Student *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Student));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No.%2d:"</span>, i);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%s%s"</span>, p-&gt;sno, p-&gt;sname, p-&gt;sex, p-&gt;major);</span><br><span class="line"><span class="built_in">fprintf</span>(StuFile, <span class="string">"%s %s %s %s"</span>, p-&gt;sno, p-&gt;sname, p-&gt;sex, p-&gt;major);</span><br><span class="line"><span class="keyword">if</span>(i != <span class="number">10</span>) <span class="built_in">fprintf</span>(StuFile, <span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">fclose(StuFile);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 以下是关于课程的代码 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Course* <span class="title">Read_Course</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *CourseFile = Open_File(<span class="number">2</span>, <span class="number">0</span>);<span class="comment">//read</span></span><br><span class="line">Course *head = (Course *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Course));</span><br><span class="line">Course *pre = head;</span><br><span class="line"><span class="keyword">while</span>(!feof(CourseFile))&#123;</span><br><span class="line">Course *p = (Course *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Course));</span><br><span class="line"><span class="built_in">fscanf</span>(CourseFile, <span class="string">"%s%s%d"</span>, p-&gt;cno, p-&gt;cname, &amp;p-&gt;classHours);</span><br><span class="line">pre-&gt;next = p;</span><br><span class="line">pre = p;</span><br><span class="line">&#125;</span><br><span class="line">pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">fclose(CourseFile);</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_Course</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">Course *p = CourseList-&gt;next;</span><br><span class="line">Course *pre = CourseList;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span> &amp;&amp; p-&gt;next != <span class="literal">NULL</span> )&#123;<span class="comment">//存在两个可以比较的结点 </span></span><br><span class="line">Course *pnext = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;cno, pnext-&gt;cno) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">pre-&gt;next = pnext;</span><br><span class="line">p-&gt;next = pnext-&gt;next;</span><br><span class="line">pnext-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">pre = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Course</span><span class="params">()</span></span>&#123;</span><br><span class="line">Course *p = CourseList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nCourseList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %d"</span>, p-&gt;cno, p-&gt;cname, p-&gt;classHours);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Write_Course</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *CourseFile = Open_File(<span class="number">2</span>, <span class="number">1</span>);<span class="comment">//write</span></span><br><span class="line">Course *p = (Course *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Course));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No.%2d:"</span>, i);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%d"</span>, p-&gt;cno, p-&gt;cname, &amp;p-&gt;classHours);</span><br><span class="line"><span class="built_in">fprintf</span>(CourseFile, <span class="string">"%s %s %d"</span>, p-&gt;cno, p-&gt;cname, p-&gt;classHours);</span><br><span class="line"><span class="keyword">if</span>(i != <span class="number">3</span>) <span class="built_in">fprintf</span>(CourseFile, <span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">fclose(CourseFile);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 以下是关于成绩的代码 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Grade* <span class="title">Read_Grade</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *GradeFile = Open_File(<span class="number">3</span>, <span class="number">0</span>);<span class="comment">//read</span></span><br><span class="line">Grade *head = (Grade *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Grade));</span><br><span class="line">Grade *pre = head;</span><br><span class="line"><span class="keyword">while</span>(!feof(GradeFile))&#123;</span><br><span class="line">Grade *p = (Grade *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Grade));</span><br><span class="line"><span class="built_in">fscanf</span>(GradeFile, <span class="string">"%s%s%d"</span>, p-&gt;sno, p-&gt;cno, &amp;p-&gt;score);</span><br><span class="line">pre-&gt;next = p;</span><br><span class="line">pre = p;</span><br><span class="line">&#125;</span><br><span class="line">pre-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">fclose(GradeFile);</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_Grade</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line">Grade *pre = GradeList;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span> &amp;&amp; p-&gt;next != <span class="literal">NULL</span> )&#123;<span class="comment">//存在两个可以比较的结点 </span></span><br><span class="line">Grade *pnext = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;sno, pnext-&gt;sno) &gt; <span class="number">0</span> || (<span class="built_in">strcmp</span>(p-&gt;sno, pnext-&gt;sno) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;cno, pnext-&gt;cno) &gt; <span class="number">0</span>) )&#123;</span><br><span class="line">pre-&gt;next = pnext;</span><br><span class="line">p-&gt;next = pnext-&gt;next;</span><br><span class="line">pnext-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">pre = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Grade</span><span class="params">()</span></span>&#123;</span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nGradeList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %d"</span>, p-&gt;sno, p-&gt;cno, p-&gt;score);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Write_Grade</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE *GradeFile = Open_File(<span class="number">3</span>, <span class="number">1</span>);<span class="comment">//write</span></span><br><span class="line">Grade *p = (Grade *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Grade));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No.%2d:"</span>, i);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s%d"</span>, p-&gt;sno, p-&gt;cno, &amp;p-&gt;score);</span><br><span class="line"><span class="built_in">fprintf</span>(GradeFile, <span class="string">"%s %s %d"</span>, p-&gt;sno, p-&gt;cno, p-&gt;score);</span><br><span class="line"><span class="keyword">if</span>(i != <span class="number">10</span>) <span class="built_in">fprintf</span>(GradeFile, <span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">fclose(GradeFile);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort_StudentsGrade</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)&#123;</span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line">Grade *pre = GradeList;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span> &amp;&amp; p-&gt;next != <span class="literal">NULL</span> )&#123;<span class="comment">//存在两个可以比较的结点 </span></span><br><span class="line">Grade *pnext = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;score &lt; pnext-&gt;score)&#123;</span><br><span class="line">pre-&gt;next = pnext;</span><br><span class="line">p-&gt;next = pnext-&gt;next;</span><br><span class="line">pnext-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line">pre = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Student *<span class="title">Find_Student</span><span class="params">(<span class="keyword">char</span> *num)</span></span>&#123;</span><br><span class="line">Student *p = StudentList-&gt;next;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;sno, num) == <span class="number">0</span>) <span class="keyword">return</span> p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;<span class="keyword">while</span>(p != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">p = (Student*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Student));</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">3</span>] = <span class="string">"-1"</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;major, temp);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;sex, temp);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;sname, temp);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;sno, temp);</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> p;<span class="comment">//返回错误 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Course *<span class="title">Find_Course</span><span class="params">(<span class="keyword">char</span> *num)</span></span>&#123;</span><br><span class="line">Course *p = CourseList-&gt;next;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;cno, num) == <span class="number">0</span>) <span class="keyword">return</span> p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;<span class="keyword">while</span>(p != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">p = (Course*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Course));</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">3</span>] = <span class="string">"-1"</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;cname, temp);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;cno, temp);</span><br><span class="line">p-&gt;classHours = <span class="number">-1</span>;</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> p;<span class="comment">//返回错误 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_All</span><span class="params">(Grade *p)</span></span>&#123;</span><br><span class="line">Student *s = Find_Student(p-&gt;sno);</span><br><span class="line">Course *c = Find_Course(p-&gt;cno);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%6s %6s %6s %6s %3d"</span>, s-&gt;sno, s-&gt;sname, s-&gt;major, c-&gt;cname, p-&gt;score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Seven</span><span class="params">()</span></span>&#123;<span class="comment">//Task7 </span></span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nGradeList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nnumber   name  major  course  grade"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">Print_All(p);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Eight</span><span class="params">(<span class="keyword">char</span>* num)</span></span>&#123;<span class="comment">//Task8 指定课程号 </span></span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nGradeList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nnumber   name  major  course  grade"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;cno, num) == <span class="number">0</span>) Print_All(p);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Nine</span><span class="params">()</span></span>&#123;<span class="comment">//Task9 </span></span><br><span class="line">Grade *p = GradeList-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nGradeList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nnumber   name  major  course  grade"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;score &lt; <span class="number">60</span>) Print_All(p);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReverseStudent</span><span class="params">()</span></span>&#123;</span><br><span class="line">Student *head = (Student*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Student));</span><br><span class="line">Student *p = StudentList-&gt;next;</span><br><span class="line">head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">Student *t = p-&gt;next;<span class="comment">//暂时保存p的下一个结点 </span></span><br><span class="line">p-&gt;next = head-&gt;next;</span><br><span class="line">head-&gt;next = p;</span><br><span class="line">p = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">StudentList = head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Queue_Push</span><span class="params">(Grade *p, Grade *&amp;top, Grade *&amp;rear)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(top-&gt;next == <span class="literal">NULL</span>)&#123;</span><br><span class="line">top-&gt;next = p;</span><br><span class="line">rear-&gt;next = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">p-&gt;next = top;</span><br><span class="line">top = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Grade* <span class="title">Queue_Pop</span><span class="params">(Grade *&amp;top, Grade *&amp;rear)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(top-&gt;next == rear-&gt;next)&#123;</span><br><span class="line">top-&gt;next = rear-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> top-&gt;next;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">rear-&gt;next = top-&gt;next;</span><br><span class="line"><span class="keyword">return</span> rear-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print_Eleven</span><span class="params">(Grade *top, Grade *rear)</span></span>&#123;</span><br><span class="line">Grade *p = Queue_Pop(top, rear);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nGradeList"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nnumber   name  major  course  grade"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">Print_All(p);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n---------------------------------------\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> opt;</span><br><span class="line">Student *HEAD = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Welcome to Students' score system!\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1.Input students.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2.Input courses.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"3.Input grades.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"4.Output students.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"5.Output courses.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"6.Output grades.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"7.Output all.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"8.Output all of a course.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"9.Output all below 60.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"10.Reverse students.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"11.Output all.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nPlease input an option:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;opt);</span><br><span class="line"><span class="keyword">if</span>(opt == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">switch</span>(opt)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">Write_Student();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"done.\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">Write_Course();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"done.\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">Write_Grade();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"done.\n"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">BubbleSort_Student();</span><br><span class="line">Print_Student();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">CourseList = Read_Course();</span><br><span class="line">BubbleSort_Course();</span><br><span class="line">Print_Course();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:&#123;</span><br><span class="line">GradeList = Read_Grade();</span><br><span class="line">BubbleSort_Grade();</span><br><span class="line">Print_Grade();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">CourseList = Read_Course();</span><br><span class="line">GradeList = Read_Grade();</span><br><span class="line">BubbleSort_StudentsGrade();<span class="comment">//按照成绩排序 </span></span><br><span class="line">Print_Seven();</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">CourseList = Read_Course();</span><br><span class="line">GradeList = Read_Grade();</span><br><span class="line">BubbleSort_StudentsGrade();<span class="comment">//按照成绩排序 </span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"input course name:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">Print_Eight(str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">CourseList = Read_Course();</span><br><span class="line">GradeList = Read_Grade();</span><br><span class="line">BubbleSort_StudentsGrade();<span class="comment">//按照成绩排序 </span></span><br><span class="line">Print_Nine();</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">ReverseStudent();<span class="comment">//逆序生成新的链表 </span></span><br><span class="line">Print_Student();<span class="comment">//输出该链表 </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:&#123;</span><br><span class="line">StudentList = Read_Student();</span><br><span class="line">CourseList = Read_Course();</span><br><span class="line">GradeList = Read_Grade();</span><br><span class="line">BubbleSort_StudentsGrade();<span class="comment">//按照成绩排序 </span></span><br><span class="line">Print_Seven();</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="project" scheme="https://mrh1s.top/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>To Be Alone</title>
    <link href="https://mrh1s.top/posts/25290751/"/>
    <id>https://mrh1s.top/posts/25290751/</id>
    <published>2019-05-04T11:11:00.000Z</published>
    <updated>2019-05-04T15:39:44.428Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>你的生活难道是过给别人看的？</p><blockquote><p>一个人成熟的标志之一就是：明白每天发生在自己身上的99%的事情对于别人而言根本毫无意义。</p></blockquote><p> ——Mark Bauerlein</p><p>有的人爱热闹，爱交流，爱群居生活。</p><p>但独处、安静和不动声色同样被一些人需要着。</p><p>合群有合群的好，独处也有独处的好。无论哪种生活方式，自己觉得舒适不就行了 ？生活充实有效率不就行了？</p><p>都大学生了，已经是一个完全独立对自己负责的成年人了。</p><p>每个人都有着自己的目标，都怀着自己的心事，都走在自己的轨迹上，都忙着自己的故事。</p><p>每个人都是一条河流，每条河流都有自己的方向。</p><p>没有交集是正常的，独处乃至孤独都是常态，哪有什么丢不丢人的？</p><p>与其关心这些，你不如关心</p><p>大学生挂科丢不丢人？大学生四六级没过丢不丢人？大学生GPA/加权垫底丢不丢人？大学生没拿过奖学金丢不丢人？</p><p>生活该有的样子是什么？</p><p>一言以蔽之：<strong>阅己，悦己，越己。</strong></p><p><img src="https://i.loli.net/2019/05/04/5ccd739ca75f5.jpg" alt="v2-3d23d3d9934db2b4379f6894ffe3ed26_hd.jpg"></p><p>链接：<a href="https://www.zhihu.com/question/307092372/answer/621757215" target="_blank" rel="noopener">https://www.zhihu.com/question/307092372/answer/621757215</a></p><p>来源：知乎</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="牢骚" scheme="https://mrh1s.top/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>Migration_Success!</title>
    <link href="https://mrh1s.top/posts/ebedb07/"/>
    <id>https://mrh1s.top/posts/ebedb07/</id>
    <published>2019-05-03T11:24:16.000Z</published>
    <updated>2019-05-05T05:51:59.612Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 把<strong>wordpress</strong>里面的所有内容迁移到了<strong>github page</strong></p><blockquote><p> 中途花了不少功夫</p><p>wordpress网页转md各种格式错误，文件引用错误，需要手动改</p></blockquote><p>以后就用这个静态网站啦！</p><p>排版比wordpress舒服多了，而且不用租服务器</p><p>回头我再去研究研究hexo的主题配置（咕 （划去，<strong>主题已经配置好</strong></p><p>并且把之前所有的非markdown文章的格式改了一下，使其更好看</p><blockquote><p> 可恶的强迫症</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="牢骚" scheme="https://mrh1s.top/categories/%E7%89%A2%E9%AA%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>bbvvmm</title>
    <link href="https://mrh1s.top/posts/ea74c872/"/>
    <id>https://mrh1s.top/posts/ea74c872/</id>
    <published>2019-04-28T04:56:40.000Z</published>
    <updated>2019-05-07T15:57:47.675Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="bbvvmm"><a href="#bbvvmm" class="headerlink" title="bbvvmm"></a>bbvvmm</h3><p>用ida打开 可以发现程序读入了用户名和密码，然后对用户名和密码进行了加密，如果用户名和密码校验正确，那么就cat flag</p><p>首先是用户名，用户名先进行一层加密，后进行sm4加密，最后进行变表base64转换为了一串密文</p><p>首先解决base64：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">tab2 = <span class="string">"IJLMNOPKABDEFGHCQRTUVWXSYZbcdefa45789+/6ghjklmnioprstuvqwxz0123y="</span></span><br><span class="line">tab1 = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="</span></span><br><span class="line"></span><br><span class="line">s2 = <span class="string">"RVYtG85NQ9OPHU4uQ8AuFM+MHVVrFMJMR8FuF8WJQ8Y="</span></span><br><span class="line">s1 = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s2:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(tab2)):</span><br><span class="line">        <span class="keyword">if</span>(tab2[i] == c):</span><br><span class="line">            s1 += tab1[i]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(base64.b64decode(s1))</span><br></pre></td></tr></table></figure><p>得到“EF468DBAF985B2509C9E200CF3525AB6”</p><p>然后是sm4加密算法，直接在网上找轮子<br>解密得到“36 32 36 31 36 34 37 32 36 35 37 32 33 31 33 32”</p><p>最后<br>两次转化成ascii<br>第一次62 61 54 72 65 72 31 32<br>第二次b a d r e r 1 2</p><p>然后就得到了用户名</p><p>对于密码，并不清楚这个密码使用了什么加密算法，只清楚这是一个虚拟机，有几百个操作数，好像是对密码进行了某种运算，最后将运算结果保存到内存的某个地方，如果这个内存数据为0，那么密码便正确</p><p>直接开ida动态远程调试：<br>能找到一个类似于栈的结构（一直+4 -4），在内存中找到这个栈对应的位置<br><img src="https://i.imgur.com/JBq8VUh.png" alt></p><p>通过不断地循环fastcall，看到栈中出现了我刚刚输入的字符串，并且旁边是一堆奇特字符串，而且长度也是六位，于是尝试交上去，成功</p><p>getshell的时候：输入密码之后不能直接按回车键，这样会多输入一个 \n，而应该ctrl+d，输入文本中断符，然后拿到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="nationalCTF_20190421" scheme="https://mrh1s.top/categories/write-up/nationalCTF-20190421/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="VM" scheme="https://mrh1s.top/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>南京邮电大学 RE-WxyVM2</title>
    <link href="https://mrh1s.top/posts/7f12b338/"/>
    <id>https://mrh1s.top/posts/7f12b338/</id>
    <published>2019-04-28T04:51:47.000Z</published>
    <updated>2019-05-07T15:57:41.467Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/WxyVM2.7z">WxyVM2</a></p><p>大概是要读这个程序里面的一段汇编代码，这段汇编代码非常长，连ida都无法反编译，但是非常有规律，可以通过写脚本来还原 这是初始化代码，估计是对加密的字符串进行还原的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.text:00000000004005FE                 mov     cs:dword_694140, 9C06AA99h</span><br><span class="line">.text:0000000000400608                 mov     cs:dword_694144, 0B4B2B03Fh</span><br><span class="line">.text:0000000000400612                 mov     cs:dword_694148, 0C51F73CFh</span><br><span class="line">.text:000000000040061C                 mov     cs:dword_69414C, 223520F8h</span><br><span class="line">.text:0000000000400626                 mov     cs:dword_694150, 0C0C53B9h</span><br><span class="line">.text:0000000000400630                 mov     cs:dword_694154, 0B59C78EAh</span><br><span class="line">.text:000000000040063A                 mov     cs:dword_694158, 0F7DE2D34h</span><br><span class="line">.text:0000000000400644                 mov     cs:dword_69415C, 0B27EEE2Ch</span><br></pre></td></tr></table></figure><p>类似于下面这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000048BAF1                 mov     edx, cs:dword_694174</span><br><span class="line">.text:000000000048BAF7                 mov     eax, cs:dword_694178</span><br><span class="line">.text:000000000048BAFD                 xor     eax, edx</span><br><span class="line">.text:000000000048BAFF                 mov     cs:dword_694178, eax</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000048B93B                 movzx   eax, cs:byte_694116</span><br><span class="line">.text:000000000048B93C                 add     eax, 7Dh</span><br><span class="line">.text:000000000048B93F                 mov     cs:byte_694116, al</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000048B95C                 movzx   eax, cs:byte_694100</span><br><span class="line">.text:000000000048B95C                 xor     eax, 6Ah</span><br><span class="line">.text:000000000048B95F                 mov     cs:byte_694100, al</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000041DD09                 movzx   eax, cs:byte_69410F</span><br><span class="line">.text:000000000041DD09                 sub     eax, 6Eh</span><br><span class="line">.text:000000000041DD0C                 mov     cs:byte_69410F, al</span><br></pre></td></tr></table></figure><p>还有一种 我 mov 我 自 己</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040093E                 movzx   eax, cs:byte_694114</span><br><span class="line">.text:0000000000400945                 mov     cs:byte_694114, al</span><br></pre></td></tr></table></figure><hr><p>ida可以修改配置文件，这样就可以反编译了 byte_694100是字符串读入的起始地址 读取18h字节</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.text:00000000004005CD                 call    _puts</span><br><span class="line">.text:00000000004005D2                 mov     esi, offset byte_694100</span><br><span class="line">.text:00000000004005D7                 mov     edi, offset format ; &quot;%s&quot;</span><br><span class="line">.text:00000000004005DC                 mov     eax, 0</span><br><span class="line">.text:00000000004005E1                 call    _ssanf</span><br></pre></td></tr></table></figure><p>694100~694117 查看汇编代码后发现很多操作都超出了这个内存的范围，而且最后也没有对这个内存进行任何修改，那么就应该直接舍去 先将所有汇编代码dump下来，用脚本筛掉垃圾代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_string</span><span class="params">(line)</span>:</span></span><br><span class="line">    l = []</span><br><span class="line">    s = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(line)):</span><br><span class="line">        <span class="keyword">if</span>(line[i] == <span class="string">' '</span> <span class="keyword">or</span> line[i] == <span class="string">','</span> <span class="keyword">or</span> i == len(line) - <span class="number">1</span>):<span class="comment">#如果读取到了末尾</span></span><br><span class="line">            <span class="keyword">if</span>(len(s) != <span class="number">0</span>):</span><br><span class="line">                l.append(s)</span><br><span class="line">                s = <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = s + line[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">f = open(<span class="string">"code.dump"</span>, <span class="string">"r"</span>)</span><br><span class="line">fout = open(<span class="string">"decode.txt"</span>, <span class="string">"w"</span>)</span><br><span class="line"><span class="comment">#fout.write("Below is decoded code.\n(format:) addr [opt] num\n")</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    line = f.readline()</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(line == <span class="string">""</span>):</span><br><span class="line">        print(<span class="string">"正常退出"</span>)</span><br><span class="line">        fout.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tab = get_string(line)<span class="comment">#获取到一个汇编指令</span></span><br><span class="line">    <span class="keyword">if</span>(tab[<span class="number">1</span>] == <span class="string">"mov"</span>):<span class="comment">#如果是垃圾指令，就直接跳过</span></span><br><span class="line">        line = f.readline()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        line = f.readline()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        line = f.readline()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span>(tab[<span class="number">1</span>] == <span class="string">"movzx"</span>):</span><br><span class="line">        addr = tab[<span class="number">3</span>]</span><br><span class="line">        addr = <span class="string">"0x"</span> + addr[<span class="number">8</span>::]<span class="comment">#获取地址信息</span></span><br><span class="line">        addr_num = int(addr, <span class="number">16</span>)</span><br><span class="line">        addr_num -= <span class="number">6897920</span> <span class="comment">#减去起始地址 得到偏移量</span></span><br><span class="line">        addr = str(addr_num)</span><br><span class="line"></span><br><span class="line">        line = f.readline()</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        tab = get_string(line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tab[<span class="number">1</span>] != <span class="string">"mov"</span>):<span class="comment">#只有当这个指令不是mov的时候才进行判断，因为有一种垃圾指令是自己mov自己</span></span><br><span class="line">            <span class="keyword">if</span>(tab[<span class="number">1</span>] == <span class="string">"add"</span>):</span><br><span class="line">                opt = <span class="string">"+="</span></span><br><span class="line">            <span class="keyword">elif</span>(tab[<span class="number">1</span>] == <span class="string">"xor"</span>):</span><br><span class="line">                opt = <span class="string">"^="</span></span><br><span class="line">            <span class="keyword">elif</span>(tab[<span class="number">1</span>] == <span class="string">"sub"</span>):</span><br><span class="line">                opt = <span class="string">"-="</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"something goes wrong! "</span> + tab[<span class="number">1</span>] + <span class="string">" at :"</span> + str(i))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            s = tab[<span class="number">3</span>]</span><br><span class="line">    <span class="comment">#        s = s[:-1:]</span></span><br><span class="line">    <span class="comment">#        s = "0x" + s</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">-1</span>] == <span class="string">"h"</span>):</span><br><span class="line">                s = s[:<span class="number">-1</span>]</span><br><span class="line">            s = <span class="string">"0x"</span> + s</span><br><span class="line"></span><br><span class="line">            s = str(int(s, <span class="number">16</span>) % <span class="number">128</span>)</span><br><span class="line"></span><br><span class="line">            line = f.readline()</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            fout.write(addr + <span class="string">" "</span> + opt + <span class="string">" "</span> + s + <span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"something goes wrong! "</span> + tab[<span class="number">1</span>] + <span class="string">" at :"</span> + str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line">fout.close()</span><br></pre></td></tr></table></figure><p>得到类似于如下的数据</p><pre><code>23 += 113 += 315 += 7823 += 1092 -= 251 -= 4811 += 12313 ^= 3823 ^= 8912 += 311 -= 513 += 754 ^= 725 -= 884 -= 1070 ^= 6023 ^= 27</code></pre><p>再写python进行逆向计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_string</span><span class="params">(line)</span>:</span></span><br><span class="line">    l = []</span><br><span class="line">    s = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(line)):</span><br><span class="line">        <span class="keyword">if</span>(line[i] == <span class="string">' '</span> ):<span class="comment">#如果读取到了末尾</span></span><br><span class="line">            <span class="keyword">if</span>(len(s) != <span class="number">0</span>):</span><br><span class="line">                l.append(s)</span><br><span class="line">                s = <span class="string">""</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = s + line[i]</span><br><span class="line">    <span class="keyword">if</span>(len(s) != <span class="number">0</span>):</span><br><span class="line">        l.append(s)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line">enc =[<span class="number">0xC0</span>,<span class="number">0x85</span>,<span class="number">0xF9</span>,<span class="number">0x6C</span>,<span class="number">0xE2</span>,<span class="number">0x14</span>,<span class="number">0xBB</span>,<span class="number">0xe4</span>,<span class="number">0xd</span>,<span class="number">0x59</span>,<span class="number">0x1c</span>,<span class="number">0x23</span>,<span class="number">0x88</span>,<span class="number">0x6e</span>,<span class="number">0x9b</span>,<span class="number">0xca</span>,<span class="number">0xba</span>,<span class="number">0x5c</span>,<span class="number">0x37</span>,<span class="number">0xfff</span>,<span class="number">0x48</span>,<span class="number">0xd8</span>,<span class="number">0x1f</span>,<span class="number">0xab</span>,<span class="number">0xa5</span>]</span><br></pre></td></tr></table></figure><p>​<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"decode.txt"</span>, <span class="string">"r"</span>)</span><br><span class="line">all = []</span><br><span class="line"></span><br><span class="line">i = <span class="number">-1</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    line = f.readline()</span><br><span class="line">    <span class="keyword">if</span>(line == <span class="string">""</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    all.append(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(i &gt;= <span class="number">0</span>):</span><br><span class="line">    line = all[i]</span><br><span class="line">    tab = get_string(line)</span><br><span class="line">    i -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(tab[<span class="number">1</span>] == <span class="string">"+="</span>):</span><br><span class="line">        enc[int(tab[<span class="number">0</span>])] -= int(tab[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">elif</span>(tab[<span class="number">1</span>] == <span class="string">"-="</span>):</span><br><span class="line">        enc[int(tab[<span class="number">0</span>])] += int(tab[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        enc[int(tab[<span class="number">0</span>])] ^= int(tab[<span class="number">2</span>])</span><br><span class="line">    enc[int(tab[<span class="number">0</span>])] %= <span class="number">128</span></span><br><span class="line">ans = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> enc:</span><br><span class="line">    ans = ans + chr(c)</span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure></p><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="cgctf" scheme="https://mrh1s.top/categories/write-up/cgctf/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="VM" scheme="https://mrh1s.top/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>壳相关</title>
    <link href="https://mrh1s.top/posts/6d13a265/"/>
    <id>https://mrh1s.top/posts/6d13a265/</id>
    <published>2019-04-12T17:22:09.000Z</published>
    <updated>2019-05-08T04:55:23.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>壳主要是用来混淆代码，让你找不到程序入口点的，通常带壳程序可以用PEid来分析并且用相应的工具去除，如果去除失败的话，就只能手动调试了</p></blockquote><h5 id="重点：ESP定律法"><a href="#重点：ESP定律法" class="headerlink" title="重点：ESP定律法"></a>重点：ESP定律法</h5><p><a href="https://blog.csdn.net/qiurisuixiang/article/details/7649799" target="_blank" rel="noopener">https://blog.csdn.net/qiurisuixiang/article/details/7649799</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="notes" scheme="https://mrh1s.top/categories/notes/"/>
    
    
      <category term="RE_Dynamic" scheme="https://mrh1s.top/tags/RE-Dynamic/"/>
    
  </entry>
  
  <entry>
    <title>ShinyShot!</title>
    <link href="https://mrh1s.top/posts/ab82ece6/"/>
    <id>https://mrh1s.top/posts/ab82ece6/</id>
    <published>2019-03-22T03:00:30.000Z</published>
    <updated>2019-05-08T04:55:52.469Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/utf-8-ShinyShot.7z">utf-8’ ‘ShinyShot!</a></p><blockquote><p>这个程序主要是利用了smc（动态代码修改技术）</p></blockquote><blockquote><p>首先我们向程序里面输入一个数，然后这个程序利用这个数去修改了一些程序的代码</p></blockquote><blockquote><p>然后输入一个字符串，将字符串base64加密后得到的密文与程序尾所保存的字符串进行比较，如果相同，则flag正确</p></blockquote><p>程序在我们输入了一个数字之后</p><p>执行了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*((_BYTE *)TopLevelExceptionFilter + (<span class="built_in">cout</span> &gt;&gt; <span class="number">3</span>)) ^= <span class="number">1</span> &lt;&lt; (<span class="built_in">cout</span> &amp; <span class="number">7</span>);</span><br></pre></td></tr></table></figure><p>这个指令，TopLevelExceptionFilter的意义暂时不明白，大概就是一个指向某个内存的指针，简记为T, 值为0x401000</p><p>程序把*(p + (cout &gt;&gt; 3)) 处的数据异或了一个1 &lt;&lt; (cout &amp; 7)</p><p>其实1 &lt;&lt; (cout &amp; 7)就是将1左移了几位</p><p>我们看到后面的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.text:004018DE EB 15             jmp     short loc_4018F5</span><br><span class="line">.text:004018E0                   ; ---------------------------------------------------------------------------</span><br><span class="line">.text:004018E0</span><br><span class="line">.text:004018E0                   loc_4018E0:                   ; CODE XREF: sub_4017AA+126↑j</span><br><span class="line">.text:004018E0 E8 A7 FE FF FF    call    sub_40178C</span><br><span class="line">.text:004018E5                   ; ---------------------------------------------------------------------------</span><br><span class="line">.text:004018E5</span><br><span class="line">.text:004018E5                   loc_4018E5:</span><br><span class="line">.text:004018E5 8D 85 40 FF FF FF lea     eax, [ebp-0C0h]</span><br><span class="line">.text:004018EB 89 44 24 04       mov     [esp+414h+var_410], eax ; char *</span><br><span class="line">.text:004018EF 8D 45 A4          lea     eax, [ebp+Buf]</span><br><span class="line">.text:004018F2 89 04 24          mov     [esp+414h+var_414], eax ; char *</span><br><span class="line">.text:004018F5</span><br><span class="line">.text:004018F5                   loc_4018F5:                   ; CODE XREF: sub_4017AA+134↑j</span><br><span class="line">.text:004018F5 E8 00 FC FF FF    call    sub_4014FA</span><br></pre></td></tr></table></figure><p>0x 004018DE  jmp 15 的意义是，除开jmp 15，往后数0x15个字节，将程序运行指针设置到此处。</p><p>而sub_4014FA是一个需要两个参数的函数，没有参数的传入，函数一定不会有正确答案。</p><p>所以我们应当将 jmp 15改为jmp到传入参数的位置</p><p>经过计算jmp 5 即可，现在我们的工作是要把0x004018DF处的15修改为5</p><p>0x15 = ‭00010101‬</p><p>0x5   =  00000101</p><p>也就是把第五位的1抹掉就行了，之前那个不明意义的内存修改就是这个用处了。</p><p>num = (0x8df&lt;&lt;3) + 0x4 = 18172</p><p>后面是一个base64加密，但闲鱼本人并不是密码学选手，太菜了，所以暂时跳过。。</p><p>最后将改版的base64加密后的字符串与程序内的进行比较，得到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Dynamic" scheme="https://mrh1s.top/tags/RE-Dynamic/"/>
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="SMC" scheme="https://mrh1s.top/tags/SMC/"/>
    
  </entry>
  
  <entry>
    <title>HappyVM</title>
    <link href="https://mrh1s.top/posts/461ecec/"/>
    <id>https://mrh1s.top/posts/461ecec/</id>
    <published>2019-03-21T14:25:17.000Z</published>
    <updated>2019-05-07T15:57:54.014Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/happyVM.7z">happyVM</a></p><blockquote><p>第一次做VM题，花了很多时间，最终还是有所收获</p></blockquote><p>首先逆向虚拟机的操作数，操作数无非几个操作：压栈，出栈，寄存器与内存之间的读写，寄存器与寄存器之间的赋值</p><p>使用如下代码配合ida python获得所有操作数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">addr = <span class="number">0x400D40</span></span><br><span class="line">cnt = <span class="number">0x78</span><span class="number">-0x40</span>+<span class="number">1</span></span><br><span class="line">i = addr</span><br><span class="line"><span class="keyword">print</span> <span class="string">"********my calc********"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"********my calc********"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"********my calc********"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"********my calc********"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"********my calc********"</span></span><br><span class="line"><span class="keyword">while</span>(i &lt;= addr + cnt <span class="number">-1</span>):</span><br><span class="line">        c = int(Byte(i))</span><br><span class="line">            <span class="keyword">if</span>(c <span class="keyword">in</span> [<span class="number">0x0</span>,<span class="number">0x8</span>,<span class="number">0x9</span>,<span class="number">0xA</span>,<span class="number">0xC</span>,<span class="number">0xD</span>,<span class="number">0xE</span>,<span class="number">0x11</span>,<span class="number">0x13</span>,<span class="number">0x14</span>]):</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">print</span> <span class="string">"opt:"</span> , hex(c) , <span class="string">"   data:"</span>,  hex(Byte(i))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"opt:"</span> , hex(c)</span><br><span class="line">                i += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>得到如下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">0(0x00) : opt: 0x11    data: 0x2d</span><br><span class="line">2(0x01) : opt: 0x0    data: 0x22</span><br><span class="line">4 : opt: 0x5</span><br><span class="line">5 : opt: 0x10</span><br><span class="line">6 : opt: 0x14    data: 0x9</span><br><span class="line">8 : opt: 0x17</span><br><span class="line">9(0x9) : opt: 0x0    data: 0x32</span><br><span class="line">11 : opt: 0x5</span><br><span class="line">12 : opt: 0x3</span><br><span class="line">13 : opt: 0x11    data: 0x16</span><br><span class="line">15 : opt: 0x6</span><br><span class="line">16 : opt: 0x0    data: 0x16</span><br><span class="line">18 : opt: 0x5</span><br><span class="line">19 : opt: 0x11    data: 0x16</span><br><span class="line">21 : opt: 0x17</span><br><span class="line">22(0x16) : opt: 0xe    data: 0x1</span><br><span class="line">24 : opt: 0x15</span><br><span class="line">25 : opt: 0x4</span><br><span class="line">26 : opt: 0xf</span><br><span class="line">27 : opt: 0x1</span><br><span class="line">28 : opt: 0x16</span><br><span class="line">29 : opt: 0x2</span><br><span class="line">30 : opt: 0x0    data: 0x0</span><br><span class="line">32 : opt: 0x4</span><br><span class="line">33 : opt: 0x3</span><br><span class="line">34 : opt: 0x5</span><br><span class="line">35 : opt: 0x10</span><br><span class="line">36 : opt: 0x14    data: 0x2b</span><br><span class="line">38 : opt: 0x5</span><br><span class="line">39 : opt: 0x9    data: 0x3</span><br><span class="line">41 : opt: 0x13    data: 0x16</span><br><span class="line">43(0x2b) : opt: 0x5</span><br><span class="line">44 : opt: 0x12</span><br><span class="line"></span><br><span class="line">45(0x2d) : opt: 0x15</span><br><span class="line">46 : opt: 0x4</span><br><span class="line">47 : opt: 0x10</span><br><span class="line">48 : opt: 0x14    data: 0x36</span><br><span class="line">50 : opt: 0xa    data: 0x1</span><br><span class="line">52 : opt: 0x13    data: 0x2d</span><br><span class="line"></span><br><span class="line">54(0x36) : opt: 0x3</span><br><span class="line">55 : opt: 0x4</span><br><span class="line">56 : opt: 0x12</span><br></pre></td></tr></table></figure><p>逐行翻译，其中部分压栈与出栈操作可以合并为内存与寄存器，寄存器与寄存器之间的数据交换，翻译得到如下代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">simplify:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">call <span class="number">0x2d</span>;<span class="comment">//strlen(str)</span></span><br><span class="line">B = <span class="number">0x22</span>;</span><br><span class="line"><span class="keyword">if</span>(A != B) <span class="keyword">return</span>;<span class="comment">//字符串长度为0x22</span></span><br><span class="line"><span class="number">0x9</span>:</span><br><span class="line">B = <span class="number">0x32</span>;</span><br><span class="line">push(C);<span class="comment">//此时C = 0x22</span></span><br><span class="line">call(<span class="number">0x16</span>);</span><br><span class="line">C = pop();</span><br><span class="line">B = <span class="number">0x16</span>;</span><br><span class="line">call(<span class="number">0x16</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">0x16</span>:</span><br><span class="line">C--;<span class="comment">//倒序处理整个字符串</span></span><br><span class="line">A = str[C];</span><br><span class="line">A ^= B;<span class="comment">//str[C] = str[C] ^ B ，而且B每次加3</span></span><br><span class="line">str[C] = A;</span><br><span class="line">push(B);</span><br><span class="line">A = <span class="number">0</span>;</span><br><span class="line">B = C;</span><br><span class="line"><span class="keyword">if</span>(A == B)&#123;<span class="comment">//如果这个字符串已经处理完成</span></span><br><span class="line"><span class="keyword">goto</span> <span class="number">0x2b</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">B = pop();</span><br><span class="line">B += <span class="number">3</span>;</span><br><span class="line"><span class="keyword">goto</span> <span class="number">0x16</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">0x2b</span>:</span><br><span class="line">B = pop();</span><br><span class="line"></span><br><span class="line"><span class="number">0x2d</span>:</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">A = str[C];</span><br><span class="line"><span class="keyword">if</span>(A == B) <span class="keyword">break</span>;</span><br><span class="line">C++;</span><br><span class="line">&#125;<span class="keyword">while</span>(A != B)</span><br><span class="line"></span><br><span class="line">A = C;</span><br><span class="line">ret;</span><br></pre></td></tr></table></figure><p>最后获取到s2的数据，solve</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">str = [<span class="number">132</span> , <span class="number">131</span> , <span class="number">157</span> , <span class="number">145</span> , <span class="number">129</span> , <span class="number">151</span> , <span class="number">215</span> , <span class="number">190</span> , <span class="number">67</span> , <span class="number">114</span> , <span class="number">97</span> , <span class="number">115</span> , <span class="number">115</span> , <span class="number">12</span> , <span class="number">106</span> , <span class="number">112</span> , <span class="number">115</span> , <span class="number">17</span> , <span class="number">72</span> , <span class="number">44</span> , <span class="number">52</span> , <span class="number">51</span> , <span class="number">49</span> , <span class="number">54</span> , <span class="number">35</span> , <span class="number">52</span> , <span class="number">62</span> , <span class="number">92</span> , <span class="number">35</span> , <span class="number">78</span> , <span class="number">23</span> , <span class="number">17</span> , <span class="number">25</span> , <span class="number">89</span> ]</span><br><span class="line">B = <span class="number">0x16</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x21</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">    str[i] = str[i] ^ B</span><br><span class="line">    B += <span class="number">3</span></span><br><span class="line"></span><br><span class="line">B = <span class="number">0x32</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x21</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">    str[i] = str[i] ^ B</span><br><span class="line">    B += <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x22</span>):</span><br><span class="line">    print(chr(str[i]),end=<span class="string">""</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
      <category term="VM" scheme="https://mrh1s.top/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>maze</title>
    <link href="https://mrh1s.top/posts/4915557e/"/>
    <id>https://mrh1s.top/posts/4915557e/</id>
    <published>2019-02-16T08:22:32.000Z</published>
    <updated>2019-05-04T15:39:44.423Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/maze.7z">maze</a> 迷宫题，用正确的方式走出迷宫即可，wsad分别控制上下左右</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">aaa = <span class="string">"""11111111111111111111111111111111111111111111111111111111111111111111...............111111111111111...............111</span></span><br><span class="line"><span class="string">    111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111</span></span><br><span class="line"><span class="string">    .111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111s111111111111111.111111111</span></span><br><span class="line"><span class="string">    1111s111111111111111.11111111111111111111111111111.11111111111111111111111111111.11111111111111111111111111111.11111</span></span><br><span class="line"><span class="string">    111111111111111111111111.11111111111111111111111111111.1111.111111111111111111111111.1t............111111111111111.1</span></span><br><span class="line"><span class="string">    t............111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.1111111111111</span></span><br><span class="line"><span class="string">    11.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111</span></span><br><span class="line"><span class="string">    111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.11111</span></span><br><span class="line"><span class="string">    1111111111.1111111111111.111111111111111...............111111111111111...............1111111111111111111111111111111</span></span><br><span class="line"><span class="string">    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"""</span></span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line">map = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> aaa:</span><br><span class="line">    <span class="keyword">if</span>(c != <span class="string">'\n'</span> <span class="keyword">and</span> c != <span class="string">' '</span>):</span><br><span class="line">        map = map + c</span><br><span class="line">        cnt += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span>(cnt % <span class="number">60</span> == <span class="number">0</span>):</span><br><span class="line">            map = map + <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line">print(map)</span><br></pre></td></tr></table></figure><p>得到如下地图：</p><pre><code>11111111111111111111111111111111111111111111111111111111111111111111...............111111111111111...............111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111s111111111111111.1111111111111s111111111111111.11111111111111111111111111111.11111111111111111111111111111.11111111111111111111111111111.11111111111111111111111111111.11111111111111111111111111111.1111.111111111111111111111111.1t............111111111111111.1t............111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111.1111111111111.111111111111111...............111111111111111...............1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</code></pre><p>走出迷宫即可： wwwwaaaaaaaaaaaaaasssssssssssssssddddddddddddddwwwwwwwaaaaaaaaaaaa</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
  </entry>
  
  <entry>
    <title>brainfuck</title>
    <link href="https://mrh1s.top/posts/8616795e/"/>
    <id>https://mrh1s.top/posts/8616795e/</id>
    <published>2019-02-15T16:11:14.000Z</published>
    <updated>2019-05-05T05:50:02.094Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>brainfuck是一种小型化程序语言，符合图灵完全思想</p><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>&gt;</td><td>指针加一</td></tr><tr><td>&lt;</td><td>指针减一</td></tr><tr><td>+</td><td>指针指向的字节的值加一</td></tr><tr><td>-</td><td>指针指向的字节的值减一</td></tr><tr><td>.</td><td>输出指针指向的单元内容（ASCⅡ码）</td></tr><tr><td>,</td><td>输入内容到指针指向的单元（ASCⅡ码）</td></tr><tr><td>[</td><td>如果指针指向的单元值为零，向后跳转到对应的]指令的次一指令处</td></tr><tr><td>]</td><td>如果指针指向的单元值不为零，向前跳转到对应的[指令的次一指令处</td></tr></tbody></table><p>,.充当输入输出<br>+-用于数值操作<br>&lt;&gt;用于指针操作<br>[]用于循环（其中执行到”[“时，程序会判断当前指针所指空间是否为0，为0则终止循环，否则继续循环）</p><p>用更通俗一点的C语言来描述：</p><table><thead><tr><th>Brainfuck</th><th>C</th></tr></thead><tbody><tr><td>&gt;</td><td>++ptr;</td></tr><tr><td>&lt;</td><td>–ptr;</td></tr><tr><td>+</td><td>++*ptr;</td></tr><tr><td>-</td><td>–*ptr;</td></tr><tr><td>.</td><td>*ptr</td></tr><tr><td>,</td><td>*ptr =getch();</td></tr><tr><td>[</td><td>while (*ptr) {</td></tr><tr><td>]</td><td>}</td></tr></tbody></table><p><strong>当前位置清零</strong><br>[-] 将当前指针的值归零</p><p><strong>之前位置清零</strong><br>[[-]&lt;] 将当前指针以及之前的指针归零</p><p><strong>字符I/O</strong><br>,. 从键盘读取一个字符并输出到屏幕上。</p><p><strong>简单的循环</strong><br>,[.,] 这是一个连续从键盘读取字符并回显到屏幕上的循环。注意，这里假定0表示输入结束，事实上有些系统并非如此。以-1和”未改变”作为判断依据的程序代码分别是”,+[-.,+]”和”,[.[-],]”。</p><p><strong>指针维护</strong><br>“&gt;,[.&gt;,] “通过移动指针保存所有的输入，供后面的程序使用。</p><p><strong>加法</strong><br>[-&gt;+&lt;]  把当前位置的值加到后面的单元中（破坏性的加，它导致左边的单元被归零）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="notes" scheme="https://mrh1s.top/categories/notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Pro的Python教室(二)</title>
    <link href="https://mrh1s.top/posts/9ed4e6b7/"/>
    <id>https://mrh1s.top/posts/9ed4e6b7/</id>
    <published>2019-02-15T11:05:13.000Z</published>
    <updated>2019-05-04T15:39:44.420Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/secend.7z">secend</a> 很简单的一道题，python入门 使用如下网站进行反编译： <a href="https://tool.lu/pyc/" target="_blank" rel="noopener">https://tool.lu/pyc/</a> 得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Welcome to Processor's Python Classroom Part 2!\n"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Now let's start the origin of Python!\n"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Plz Input Your Flag:\n'</span></span><br><span class="line">enc = raw_input()</span><br><span class="line">len = len(enc)</span><br><span class="line">enc1 = []</span><br><span class="line">enc2 = <span class="string">''</span></span><br><span class="line">aaa = <span class="string">'ioOavquaDb&#125;x2ha4[~ifqZaujQ#'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        enc1.append(chr(ord(enc[i]) + <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    enc1.append(chr(ord(enc[i]) + <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">s1 = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len):</span><br><span class="line">        <span class="keyword">if</span> (i + x) % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            s1.append(enc1[i])</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">enc2 = enc2.join(s1)</span><br><span class="line"><span class="keyword">if</span> enc2 <span class="keyword">in</span> aaa:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"You 're Right!"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"You're Wrong!"</span></span><br><span class="line">    exit(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>解密代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">aaa = <span class="string">'ioOavquaDb&#125;x2ha4[~ifqZaujQ#'</span></span><br><span class="line">list = list(aaa)</span><br><span class="line">len = len(aaa)</span><br><span class="line"></span><br><span class="line">dec1 = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">dec2 = <span class="string">''</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len):</span><br><span class="line">        <span class="keyword">if</span> (i + x) % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            dec1[i] = list[cnt]</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        dec2 = dec2 + chr(ord(dec1[i]) - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dec2 = dec2 + chr(ord(dec1[i]) - <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">print(dec2)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
  </entry>
  
  <entry>
    <title>xor</title>
    <link href="https://mrh1s.top/posts/f9cd8782/"/>
    <id>https://mrh1s.top/posts/f9cd8782/</id>
    <published>2019-02-15T08:38:16.000Z</published>
    <updated>2019-05-05T05:49:45.332Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/xor.7z">xor</a>  </p><p>题目本身难度不大，就是异或即可，但是这个地方IDA有点问题，本来程序定义了一个数组，但是IDA里面的显示为一个变量，通过计算偏移值可以算出它是数组，这个地方以后要多加注意。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line">char a[<span class="number">50</span>]=<span class="string">"hgame&#123;Y0u_mayb3_need_th1s_0ne!!!!!&#125;"</span>;</span><br><span class="line">int b[<span class="number">50</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">92</span>,<span class="number">18</span>,<span class="number">38</span>,<span class="number">11</span>,<span class="number">93</span>,<span class="number">43</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">43</span>,<span class="number">69</span>,<span class="number">6</span>,<span class="number">86</span>,<span class="number">44</span>,<span class="number">54</span>,<span class="number">67</span>,<span class="number">0</span>,<span class="number">66</span>,<span class="number">85</span>,<span class="number">126</span>,<span class="number">72</span>,<span class="number">85</span>,<span class="number">30</span>&#125;;</span><br><span class="line">int main()&#123;</span><br><span class="line">    <span class="keyword">for</span>(int i = <span class="number">0</span>; i &lt; <span class="number">35</span>; i++)</span><br><span class="line">        printf(<span class="string">"%c"</span>, a[i] ^ b[i]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
  </entry>
  
  <entry>
    <title>wakarimasu</title>
    <link href="https://mrh1s.top/posts/6aab0075/"/>
    <id>https://mrh1s.top/posts/6aab0075/</id>
    <published>2019-02-15T08:31:00.000Z</published>
    <updated>2019-05-05T05:48:56.965Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="/uploads/wakarimasu.7z">wakarimasu</a> </p><p>本质是解两个矩阵，一个是乘法矩阵求逆，另外一个仅仅是矩阵的加减</p><p>由于矩阵求逆的时候存在小数精度问题，故用计算机算出来的值不会精确到整数，但是一旦你看到那个结果就一定会知道你算对了</p><p>算矩阵的网站：<br><a href="https://zh.numberempire.com/matrixcalculator.php" target="_blank" rel="noopener">https://zh.numberempire.com/matrixcalculator.php</a></p><p><a href="https://zh.numberempire.com/matrixbinarycalculator.php" target="_blank" rel="noopener">https://zh.numberempire.com/matrixbinarycalculator.php</a></p><p>A = </p><p>8 1 7 1 1 0<br>4 8 1 2 3 9<br>3 8 6 6 4 8<br>3 5 7 8 8 7<br>0 9 0 2 3 4<br>2 3 2 5 4 0</p><p>B = </p><p>122 207 140 149 142 168<br>95 201 122 145 136 167<br>112 192 127 137 134 147<br>95 207 110 134 133 173<br>136 212 160 162 152 179<br>121 193 126 126 119 147</p><p>c = </p><p>16 8 8 14 6 11<br>5 23 5 10 12 23<br>14 23 19 7 8 10<br>4 13 22 17 11 22<br>6 14 2 11 18 9<br>5 8 8 10 16 13</p><p>X1 * B = A</p><p>X2 + B = C</p><p>X1=AB^-1</p><p>=</p><p>5.999951    5.999888    6.000136    5.999828    5.999879    7.000097<br>2.999953    4.999902    7.000126    5.999842    5.999886    6.000086<br>5.999953    4.999893    4.000127    5.99984        6.99989        7.000089<br>2.999956    6.999908    5.000125    5.999846    6.999877    5.000089<br>6.999948    5.999879    7.000144    6.999816    4.999875    7.000104<br>6.999956    5.999896    6.000123    2.999842    5.999887    7.000091</p><p>x2 = C - B</p><p>=</p><p>8    7    1    13    5    11<br>1    15    4    8    9    14<br>11    15    13    1    4    2<br>1    8    15    9    3    15<br>6    5    2    9    15    5<br>3    5    6    5    12    13</p><p>再将X1与X2结合（X1为高四位，X2为低四位）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[]=&#123;<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> b[]=&#123;<span class="number">8</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">14</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">13</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">12</span>,<span class="number">13</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">35</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>, (a[i]&lt;&lt;<span class="number">4</span>) + b[i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="write up" scheme="https://mrh1s.top/categories/write-up/"/>
    
      <category term="hgame_20190122" scheme="https://mrh1s.top/categories/write-up/hgame-20190122/"/>
    
    
      <category term="RE_Static" scheme="https://mrh1s.top/tags/RE-Static/"/>
    
  </entry>
  
  <entry>
    <title>FAT16文件系统</title>
    <link href="https://mrh1s.top/posts/46621246/"/>
    <id>https://mrh1s.top/posts/46621246/</id>
    <published>2019-02-04T10:06:10.000Z</published>
    <updated>2019-05-05T05:48:21.637Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://blog.csdn.net/sikuon/article/details/75939434" target="_blank" rel="noopener">https://blog.csdn.net/sikuon/article/details/75939434</a></p><p><a href="https://blog.csdn.net/cassie_huang/article/details/62227023" target="_blank" rel="noopener">https://blog.csdn.net/cassie_huang/article/details/62227023</a></p><p><a href="https://blog.csdn.net/yeruby/article/details/41978199" target="_blank" rel="noopener">https://blog.csdn.net/yeruby/article/details/41978199</a></p><p>最详细：<a href="https://blog.csdn.net/mj5742356/article/details/20125511" target="_blank" rel="noopener">https://blog.csdn.net/mj5742356/article/details/20125511</a></p><p>长短文件名 <a href="https://wenku.baidu.com/view/d729d62a680203d8cf2f2474.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/d729d62a680203d8cf2f2474.html</a></p><h1 id="FAT16"><a href="#FAT16" class="headerlink" title="FAT16"></a>FAT16</h1><h5 id="一、关于需要掌握的基础知识"><a href="#一、关于需要掌握的基础知识" class="headerlink" title="一、关于需要掌握的基础知识"></a>一、关于需要掌握的基础知识</h5><p>1.文件读写与文件指针的移动操作</p><p>2.十六进制计算</p><p>3.链表</p><p>4.小端序</p><h5 id="二、FAT16文件系统的结构"><a href="#二、FAT16文件系统的结构" class="headerlink" title="二、FAT16文件系统的结构"></a>二、FAT16文件系统的结构</h5><p><strong>1.</strong>FAT16第一个扇区是DBR，是对整个分区的格式及参数进行说明的部分，从中可以读取到FAT所占扇区数、每簇扇区数、每个扇区的字节数、保留扇区数…… </p><p>系统通过这些参数可以计算出FAT1、FAT2、根目录、数据区的位置，其中，保留扇区之后的即为FAT区，FAT区由两个完全相同的FAT1、FAT2构成，FAT2作为FAT1的一个备份，保障数据安全。</p><p><strong>2.</strong>FAT1中存放了每个簇之间的对应关系以及自身的属性。</p><p>FAT2是FAT1的一个备份，以便于磁盘意外损坏的恢复</p><p>通过查表我们可以了解到这个簇到底是未被使用还是已被使用，以及这个簇后面还有没有链接到下一个簇。从而将连续的数据离散储存。</p><p><strong>3.</strong>FAT2后的是根目录，根目录占用32个扇区，当中储存了根节点下面所拥有的所有文件和文件夹（文件夹可以当作一种特殊的文件），每个文件占用32个字节（当文件名过长的时候可能会占用更多空间），这32个字节分别对应的是这个文件对应的各种属性以及簇号。</p><p>我们可以通过寻找该簇来读取该文件的具体内容，如果是文件夹，这个簇中储存的是文件夹内的所有子目录元素（与根目录的作用类似）。</p><p>文件夹创建的时候会生成两个32字节的项</p><p>一个是  “.” ，其中储存的是文件夹自身的信息</p><p>另一个是  “..”， 储存了这个文件夹的父目录的信息（方便返回上一级）</p><h5 id="三、删除文件（夹）的过程"><a href="#三、删除文件（夹）的过程" class="headerlink" title="三、删除文件（夹）的过程"></a>三、删除文件（夹）的过程</h5><p>找到描述该文件的那个32字节的项，将偏移值为0h的数据改为 E5，以说明该数据被删除。如果是文件夹的话，还应递归删除其目录下的所有文件。</p><h5 id="四、创建文件（夹）的过程"><a href="#四、创建文件（夹）的过程" class="headerlink" title="四、创建文件（夹）的过程"></a>四、创建文件（夹）的过程</h5><p>在当前目录的簇下寻找一个空位置（32字节） 将新文件（夹）的信息写入，并且在磁盘中寻找一个未使用的新簇，将其分配给创建的文件（夹）</p><h5 id="五、读取文件（夹）的过程"><a href="#五、读取文件（夹）的过程" class="headerlink" title="五、读取文件（夹）的过程"></a>五、读取文件（夹）的过程</h5><p>读取文件（夹）所对应的32字节数据，从而读取到整个文件的信息尤其是簇号，根据这个簇号去磁盘中的相应区域读取这个文件（夹）所储存的信息（文件）</p><h5 id="六、写入文件的过程"><a href="#六、写入文件的过程" class="headerlink" title="六、写入文件的过程"></a>六、写入文件的过程</h5><p>类似于读取文件</p><h5 id="七、遇到当前簇满的处理措施"><a href="#七、遇到当前簇满的处理措施" class="headerlink" title="七、遇到当前簇满的处理措施"></a>七、遇到当前簇满的处理措施</h5><p>在磁盘中寻找一个新簇，将原来的簇指向新簇，从而将两个簇连接在一起，形成一个连续的数据区域</p><p><strong>八、注意事项</strong></p><p><strong>1.文件系统中的数据以小端序保存（数字的低位 存在 地址的低位上，这与普通人的思维有所区别）</strong></p><p>e.g.  数据1234h，  用两个字节进行存储，则其在内存中的存储形式为：  34 12</p><p><strong>2.DBR(DOS boot record) 占一个扇区，里面储存了整个文件系统的各种配置信息（如每个扇区的字节数，每个簇的扇区数，FAT区的个数，每个FAT所占扇区数等等）</strong></p><p><strong>3.FAT表中每个记录的位数成为FAT大小（fat16就代表一个簇的簇号所占空间为十六位，两个字节），这意味着一个fat16磁盘最多能储存20000h个簇，也就限制了fat16的一个分区的大小</strong></p><h5 id="八、相关图表"><a href="#八、相关图表" class="headerlink" title="八、相关图表"></a>八、相关图表</h5><h3 id="FAT16记录表（可先记录一下自己磁盘的如下信息，方便之后的分析，以下只是我自己SD卡的信息）"><a href="#FAT16记录表（可先记录一下自己磁盘的如下信息，方便之后的分析，以下只是我自己SD卡的信息）" class="headerlink" title="FAT16记录表（可先记录一下自己磁盘的如下信息，方便之后的分析，以下只是我自己SD卡的信息）"></a>FAT16记录表（可先记录一下自己磁盘的如下信息，方便之后的分析，以下只是我自己SD卡的信息）</h3><p>对于FAT16的一个分区：</p><p>每簇占多少个扇区：<del>64</del></p><p>DBR（保留扇区数）<del>0h</del></p><p>FAT1（FAT扇区数）：标记某个簇的状态（已使用 未使用 坏簇），以两个字节为一个单位。  <del>1000h</del></p><p>FAT2（FAT扇区数）：与FAT1完全一样，作为FAT1的备份  <del>1D800h</del></p><p>根目录（32个扇区）   ~~ 3C000h~~</p><p>数据区（第二个簇）  <del>40000h</del></p><p>第五个簇<del>58000h</del></p><p>第六个簇<del>60000h</del></p><h3 id="DBR数据对照表"><a href="#DBR数据对照表" class="headerlink" title="DBR数据对照表"></a>DBR数据对照表</h3><p><a href="https://i.loli.net/2019/02/11/5c61041e5ed79.png" title="DBR数据对照表" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/02/11/5c61041e5ed79.png" alt="DBR数据对照表" title="DBR数据对照表"></a></p><p><strong>注意：1Ch:  20为文件 10为文件夹</strong></p><h3 id="文件信息对照表"><a href="#文件信息对照表" class="headerlink" title="文件信息对照表"></a>文件信息对照表</h3><p><a href="https://i.loli.net/2019/02/11/5c61043476270.png" title="文件信息对照表1" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/02/11/5c61043476270.png" alt="文件信息对照表1" title="文件信息对照表1"></a><br><a href="https://i.loli.net/2019/02/11/5c61043de77ac.png" title="文件信息对照表2" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/02/11/5c61043de77ac.png" alt="文件信息对照表2" title="文件信息对照表2"></a></p><h3 id="系统时间与文件系统中的时间的换算"><a href="#系统时间与文件系统中的时间的换算" class="headerlink" title="系统时间与文件系统中的时间的换算"></a><strong>系统时间与文件系统中的时间的换算</strong></h3><p>1.0x16~0x17中的时间=小时<em>2048+分钟</em>32+秒/2。<br>得出的结果换算成16进制填入即可。<br>也就是：<br>0x16字节的0~4位是以2秒为单位的量值；<br>0x16字节的5~7位和0x17字节的0~2位是分钟；<br>0x17字节的3~7位是小时。</p><p>2.0x18~0x19中的日期=(年份-1980)<em>512+月份</em>32+日。<br>得出的结果换算成16进制填入即可。<br>也就是：<br>0x18字节0~4位是日期数；<br>0x18字节5~7位和0x19字节0位是月份；<br>0x19字节的1~7位为年号，<br>原定义中0~119分别代表1980~2099，<br>目前高版本的Windows允许取0~127，即年号最大可以到2107年。</p><h3 id="FAT16簇空间大小与分区空间大小的关系"><a href="#FAT16簇空间大小与分区空间大小的关系" class="headerlink" title="FAT16簇空间大小与分区空间大小的关系"></a>FAT16簇空间大小与分区空间大小的关系</h3><table><thead><tr><th>表9  FAT16分区大小与对因簇大小</th><th></th><th></th></tr></thead><tbody><tr><td>分区空间大小</td><td>每个簇的扇区</td><td>簇空间大小</td></tr><tr><td>0MB-32MB</td><td>1</td><td>512个字节</td></tr><tr><td>33MB-64MB</td><td>2</td><td>1k</td></tr><tr><td>65MB-128MB</td><td>4</td><td>2k</td></tr><tr><td>129MB-225MB</td><td>8</td><td>4k</td></tr><tr><td>256MB-511MB</td><td>16</td><td>8k</td></tr><tr><td>512MB-1023MB</td><td>32</td><td>16k</td></tr><tr><td>1024MB-2047MB</td><td>64</td><td>32k</td></tr><tr><td>2048MB-4095MB</td><td>128</td><td>64k</td></tr></tbody></table><p><strong>文件操作函数：</strong></p><p>fseek函数可以把位置指针调整到文件任意位置</p><p>fseek函数里需要提供一个基准位置和目标位置到基准位置间的距离，计算机根据他们计算出目标位置<br>SEEK_SET 0 把文件头作为基准位置<br>SEEK_CUR 1 把当前位置作为基准位置</p><p>SEEK_END 2 把文件尾作为基准位置</p><blockquote><p>以下为完整代码：<br>程序结构设计有一点毛病，本来簇在读入程序之后可以切割成若干个32字节的块，方便操作。结果我把一个簇当成字符串处理了，所以写了很多个字符串操作函数</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ISCMD(t) strcmp(a, t) == 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COMMAND_MAX 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SECTORS_PER_CLUST 1<span class="comment">//每簇扇区数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BYTES_PER_SECTOR 512<span class="comment">//每扇区字节数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SECTORS_PER_FAT 128<span class="comment">//每FAT扇区数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESERVED_SECTORS 1<span class="comment">//保留扇区数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SECTORS_ROOT SECTORS_PER_CLUST<span class="comment">//根目录的扇区数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLUST_MAX_COUNT (SECTORS_PER_FAT * BYTES_PER_SECTOR &gt;&gt; 1) <span class="comment">//簇的总个数 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROOT (RESERVED_SECTORS + SECTORS_PER_FAT * 2) * BYTES_PER_SECTOR<span class="comment">//根目录的位置</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLUST_SECOND ROOT + SECTORS_ROOT * BYTES_PER_SECTOR<span class="comment">//第二个簇的位置 </span></span></span><br><span class="line">FILE *fp;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">clu</span>&#123;</span><span class="comment">//一个簇 </span></span><br><span class="line"><span class="keyword">int</span> status;</span><br><span class="line"><span class="keyword">char</span> byte[BYTES_PER_SECTOR * SECTORS_PER_CLUST + <span class="number">10</span>]; <span class="comment">//簇里的扇区 </span></span><br><span class="line">&#125;clust[CLUST_MAX_COUNT];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fi</span>&#123;</span><span class="comment">//一个文件 </span></span><br><span class="line"><span class="keyword">bool</span> dir;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">2</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> time;<span class="comment">//修改时间 </span></span><br><span class="line"><span class="keyword">int</span> date;<span class="comment">//修改日期 </span></span><br><span class="line"><span class="keyword">int</span> clust;<span class="comment">//首簇号</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> len;<span class="comment">//文件大小</span></span><br><span class="line">fi *next;<span class="comment">//下一个文件 </span></span><br><span class="line">&#125;file[<span class="number">1</span> + CLUST_MAX_COUNT * SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>];</span><br><span class="line"><span class="keyword">int</span> FileCnt, Clust_now;<span class="comment">//当前文件的总个数与当前的簇 </span></span><br><span class="line">fi *HEAD;<span class="comment">//头指针 </span></span><br><span class="line"><span class="keyword">char</span> dir[<span class="number">10000</span>][<span class="number">6</span>];<span class="comment">//存放所有文件夹名字的数组</span></span><br><span class="line"><span class="keyword">int</span> dir_now; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manu_Print</span><span class="params">()</span></span>;<span class="comment">//打印帮助菜单</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Command_Read</span><span class="params">()</span></span>;<span class="comment">//读取命令 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Data_ReadOrWrite</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span>)</span></span>;<span class="comment">//文件操作，读、写、关闭</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Initialize</span><span class="params">()</span></span>;<span class="comment">//初始化数据文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Create_New</span><span class="params">()</span></span>;<span class="comment">//创建新的类FAT16数据文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Read</span><span class="params">()</span></span>;<span class="comment">//将数据读入内存 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Save</span><span class="params">()</span></span>;<span class="comment">//保存文件 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_DBR_Print</span><span class="params">()</span></span>;<span class="comment">//创建DBR</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Add_A_File</span><span class="params">(fi *, <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;<span class="comment">//将clust中指定位置的字符串填充为新文件的信息 </span></span><br><span class="line"></span><br><span class="line"><span class="function">fi *<span class="title">Filelist_Search_File</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">bool</span>)</span></span>;<span class="comment">//在已经读入的文件中寻找对应名称的文件 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Update</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//更新文件列表 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Destroy</span><span class="params">()</span></span>;<span class="comment">//文件列表清空 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Add_File</span><span class="params">(fi *)</span></span>;<span class="comment">//在文件列表中加入一个元素 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Bubble_Sort</span><span class="params">()</span></span>;<span class="comment">//用冒泡排序把文件列表按照字典序排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Print</span><span class="params">()</span></span>;<span class="comment">//打印出所有的文件 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_Number</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>, <span class="keyword">int</span>)</span></span>;<span class="comment">//以小端序方式打印 (对文件)</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">File_Scanf_Number</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//读取n个字节的小端序数字</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_String</span><span class="params">(<span class="keyword">char</span> *,<span class="keyword">int</span>)</span></span>;<span class="comment">//以字符串向文件输出信息 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_32Bytes</span><span class="params">(fi *)</span></span>;<span class="comment">//向文件中输出文件/文件夹的信息</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Printf_Number</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">long</span> <span class="keyword">long</span>, <span class="keyword">int</span>)</span></span>;<span class="comment">//以小端序方式打印 (对字符串)</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Str_Scanf_Number</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;<span class="comment">//读取n个字节的小端序数字</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Scanf_String</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>, <span class="keyword">char</span> *)</span></span>;<span class="comment">//以二进制格式读取字符串的内容 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Str_Read_32Bytes</span><span class="params">(<span class="keyword">char</span> *, fi *)</span></span>;<span class="comment">//读取一个文件/文件夹的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Printf_32Bytes</span><span class="params">(<span class="keyword">char</span> *, fi *)</span></span>;<span class="comment">//向字符串中输出文件/文件夹的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Cut_Name_Into_Two</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span>*, <span class="keyword">char</span>*)</span></span>;<span class="comment">//将一个文件名分隔为两部分 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Clust_Judge_Status</span><span class="params">(<span class="keyword">int</span>)</span></span>; <span class="comment">//判断该簇的状态 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time_Print</span><span class="params">(<span class="keyword">int</span> t)</span></span>;<span class="comment">//输出时间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_Print</span><span class="params">(<span class="keyword">int</span> t)</span></span>;<span class="comment">//输出日期 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Time_Get</span><span class="params">()</span></span>;<span class="comment">//获取当前时间 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_Get</span><span class="params">()</span></span>;<span class="comment">//获取当前日期 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dir_Change</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">bool</span>)</span></span>;<span class="comment">//更改目录位置 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dir_Print</span><span class="params">()</span></span>;<span class="comment">//打印当前目录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dir_Find_Empty</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//在一个簇里面寻找空的位置 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Make_a_New_File</span><span class="params">(fi *, <span class="keyword">bool</span>)</span></span>;<span class="comment">//返回一个创建好的空文件 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clust_Clear_File</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//清理某个簇内的文件的所有信息 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clust_Clear_Dir</span><span class="params">(<span class="keyword">int</span>)</span></span>;<span class="comment">//清理某个簇内的所有文件夹 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">Data_Initialize();</span><br><span class="line">Manu_Print();</span><br><span class="line"><span class="keyword">bool</span> FLAG = FALSE;</span><br><span class="line"><span class="keyword">char</span> rt[<span class="number">6</span>] = <span class="string">"root:"</span>;</span><br><span class="line">dir_now = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(dir[dir_now], rt);</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">Dir_Print();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&gt;"</span>);</span><br><span class="line">FLAG = Command_Read();</span><br><span class="line">&#125;<span class="keyword">while</span>(FLAG);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Command_Read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str[COMMAND_MAX], a[COMMAND_MAX], b[COMMAND_MAX];</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">sscanf</span>(str, <span class="string">"%s%s"</span>, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="number">0</span>) <span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">Filelist_Destroy();</span><br><span class="line">Filelist_Update(Clust_now);</span><br><span class="line"></span><br><span class="line">Filelist_Bubble_Sort();</span><br><span class="line"><span class="keyword">if</span>(ISCMD(<span class="string">"ls"</span>) || ISCMD(<span class="string">"dir"</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">Dir_Print();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" contains the following files or directories:\n"</span>);</span><br><span class="line">Filelist_Print();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"cd"</span>))&#123;</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(temp, b);</span><br><span class="line">fi *t = Filelist_Search_File(temp, TRUE);</span><br><span class="line"><span class="keyword">if</span>(t != <span class="literal">NULL</span> &amp;&amp; t-&gt;dir == TRUE)&#123;</span><br><span class="line">Clust_now = t-&gt;clust;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(b, <span class="string">".."</span>) == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dir_now != <span class="number">0</span>)</span><br><span class="line">Dir_Change(b, FALSE);<span class="comment">//回退</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(b, <span class="string">"."</span>) != <span class="number">0</span>)</span><br><span class="line">Dir_Change(b, TRUE);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Invalid directory!\n\n"</span>);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"mkdir"</span>))&#123;</span><br><span class="line">fi *t = Filelist_Search_File(b, TRUE);</span><br><span class="line"><span class="keyword">if</span>(t != <span class="literal">NULL</span>)&#123;<span class="comment">//如果这个文件夹已经存在，就返回错误</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Directory already exists!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strlen</span>(b) &gt;= <span class="number">8</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Name too long!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Clust_temp = Clust_now;</span><br><span class="line"><span class="keyword">int</span> k = Dir_Find_Empty(Clust_temp);</span><br><span class="line"><span class="keyword">while</span>(k == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[Clust_temp].status) == <span class="number">0</span>)</span><br><span class="line">Clust_temp = clust[Clust_temp].status;<span class="comment">//如果这个链表的其他簇还有空位 </span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> Clust_new = <span class="number">2</span>;<span class="comment">//这个链表中已经不存在空位了，要找一个空簇，从第二个簇开始找 </span></span><br><span class="line"><span class="keyword">while</span>(clust[Clust_new].status != <span class="number">0</span>) Clust_new++;</span><br><span class="line">clust[Clust_temp].status = Clust_new;</span><br><span class="line">clust[Clust_new].status = <span class="number">0xFFFF</span>;</span><br><span class="line">Clust_temp = Clust_new;</span><br><span class="line">&#125;</span><br><span class="line">k = Dir_Find_Empty(Clust_temp);<span class="comment">//重新寻找空位 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fi *F = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));<span class="comment">//填充基本信息 </span></span><br><span class="line">Make_a_New_File(F, TRUE);</span><br><span class="line">clust[Clust_temp].status = <span class="number">0xFFFF</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(F-&gt;name[<span class="number">0</span>], b);<span class="comment">//修改文件夹名称 </span></span><br><span class="line">Data_Add_A_File(F, Clust_temp, k);<span class="comment">//把文件写入簇 </span></span><br><span class="line"></span><br><span class="line">fi *temp = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));<span class="comment">//再拿一个临时变量</span></span><br><span class="line">Make_a_New_File(temp, TRUE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *p = clust[F-&gt;clust].byte;</span><br><span class="line"><span class="built_in">strcpy</span>(temp-&gt;name[<span class="number">0</span>], <span class="string">"."</span>);</span><br><span class="line">temp-&gt;clust = F-&gt;clust; <span class="comment">// .文件夹用于存放本文件夹的信息</span></span><br><span class="line">Str_Printf_32Bytes(p, temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(temp-&gt;name[<span class="number">0</span>], <span class="string">".."</span>);</span><br><span class="line">temp-&gt;clust = Clust_now; <span class="comment">// ..文件夹用于存放上一个文件夹的信息</span></span><br><span class="line">Str_Printf_32Bytes(p + <span class="number">32</span>, temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(F);</span><br><span class="line"><span class="built_in">free</span>(temp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"create"</span>))&#123;</span><br><span class="line"><span class="comment">//类似于新建文件夹，但是不用新建 .和.. </span></span><br><span class="line">fi *t = Filelist_Search_File(b, FALSE);</span><br><span class="line"><span class="keyword">if</span>(t != <span class="literal">NULL</span>)&#123;<span class="comment">//如果这个文件夹已经存在，就返回错误</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Directory already exists!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">20</span>];<span class="comment">//创建一个临时字符串 </span></span><br><span class="line"><span class="built_in">strcpy</span>(temp, b);</span><br><span class="line">Str_Cut_Name_Into_Two(temp, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strlen</span>(a) &gt;= <span class="number">8</span> || <span class="built_in">strlen</span>(b) &gt;=<span class="number">3</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Name too long!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Clust_temp = Clust_now;</span><br><span class="line"><span class="keyword">int</span> k = Dir_Find_Empty(Clust_temp);</span><br><span class="line"><span class="keyword">while</span>(k == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[Clust_temp].status) == <span class="number">0</span>)</span><br><span class="line">Clust_temp = clust[Clust_temp].status;<span class="comment">//如果这个链表的其他簇还有空位 </span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> Clust_new = <span class="number">2</span>;<span class="comment">//这个链表中已经不存在空位了，要找一个空簇，从第二个簇开始找 </span></span><br><span class="line"><span class="keyword">while</span>(clust[Clust_new].status != <span class="number">0</span>) Clust_new++;</span><br><span class="line">clust[Clust_temp].status = Clust_new;</span><br><span class="line">clust[Clust_new].status = <span class="number">0xFFFF</span>;</span><br><span class="line">Clust_temp = Clust_new;</span><br><span class="line">&#125;</span><br><span class="line">k = Dir_Find_Empty(Clust_temp);<span class="comment">//重新寻找空位 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fi *F = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));<span class="comment">//填充基本信息 </span></span><br><span class="line">Make_a_New_File(F, FALSE);</span><br><span class="line">clust[Clust_temp].status = <span class="number">0xFFFF</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(F-&gt;name[<span class="number">0</span>], a);<span class="comment">//修改文件名称 </span></span><br><span class="line"><span class="built_in">strcpy</span>(F-&gt;name[<span class="number">1</span>], b);<span class="comment">//修改文件后缀 </span></span><br><span class="line">Data_Add_A_File(F, Clust_temp, k);<span class="comment">//把文件写入簇</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"rmdir"</span>))&#123;</span><br><span class="line"></span><br><span class="line">fi *t = Filelist_Search_File(b, TRUE);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no such a directory!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Clust_Clear_Dir(t-&gt;clust);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(temp, b);</span><br><span class="line">Str_Cut_Name_Into_Two(temp, a, b);<span class="comment">//把文件名分割一下 </span></span><br><span class="line"><span class="keyword">char</span> *st = clust[Clust_now].byte;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>; i++)&#123;<span class="comment">//寻找到簇中的那个文件，并且打上0xe5标记 </span></span><br><span class="line">fi *p = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));</span><br><span class="line"></span><br><span class="line">Str_Read_32Bytes(st + i * <span class="number">32</span>, p);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;name[<span class="number">0</span>], a) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;name[<span class="number">1</span>], b) == <span class="number">0</span> &amp;&amp; p-&gt;dir == TRUE)&#123;</span><br><span class="line">*(st + i * <span class="number">32</span>) = <span class="number">0xE5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">直接找到那个文件，首先递归删除该文件夹下的所有内容</span></span><br><span class="line"><span class="comment">然后再把本身 标记为删除 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"rm"</span>))&#123;</span><br><span class="line"></span><br><span class="line">fi *t = Filelist_Search_File(b, FALSE);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no such a file!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Clust_Clear_File(t-&gt;clust);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *st = clust[Clust_now].byte;</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(temp, b);</span><br><span class="line">Str_Cut_Name_Into_Two(temp, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>; i++)&#123;</span><br><span class="line">fi *p = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));</span><br><span class="line">Str_Read_32Bytes(st + i * <span class="number">32</span>, p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;name[<span class="number">0</span>], a) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;name[<span class="number">1</span>], b) == <span class="number">0</span> &amp;&amp; p-&gt;dir == FALSE)&#123;</span><br><span class="line">*(st + i * <span class="number">32</span>) = <span class="number">0xE5</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类似于删除文件夹，但不用递归删除 </span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"read"</span>))&#123;</span><br><span class="line">fi *t = Filelist_Search_File(b, FALSE);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no such a file!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nxtClust = t-&gt;clust;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nThis is what %s contains:"</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n----------------------------\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(clust[nxtClust].byte[i] == <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,clust[nxtClust].byte[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[nxtClust].status) == <span class="number">1</span>)</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">nxtClust = clust[nxtClust].status;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n----------------------------\n\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据簇号直接搜索到对应的文件并且读入 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"write"</span>))&#123;</span><br><span class="line"></span><br><span class="line">fi *t = Filelist_Search_File(b, FALSE);</span><br><span class="line"><span class="keyword">if</span>(t == <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"no such a file!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nxtClust = t-&gt;clust;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR; i++)&#123;</span><br><span class="line">c = getchar();</span><br><span class="line"><span class="keyword">if</span>(c == <span class="number">-1</span>)&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">clust[nxtClust].byte[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">clust[nxtClust].byte[i] = c;</span><br><span class="line">&#125;</span><br><span class="line">clust[nxtClust].status = <span class="number">0xFFFF</span>;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[nxtClust].status) == <span class="number">0</span>)</span><br><span class="line">nxtClust = clust[nxtClust].status;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> tempClust = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(Clust_Judge_Status(clust[tempClust].status) != <span class="number">2</span>) </span><br><span class="line">tempClust++;</span><br><span class="line">clust[nxtClust].status = tempClust;</span><br><span class="line">nxtClust = tempClust;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">边写文件边开新的簇 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"format"</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Are you sure to FORMAT this disk? (y/n): "</span>);</span><br><span class="line">gets(a);</span><br><span class="line"><span class="keyword">if</span>(ISCMD(<span class="string">"y"</span>) || ISCMD(<span class="string">"Y"</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Once again. You'll lose your data, continue? (y/n): "</span>);</span><br><span class="line">gets(a);</span><br><span class="line"><span class="keyword">if</span>(ISCMD(<span class="string">"y"</span>) || ISCMD(<span class="string">"Y"</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"formating...  "</span>);</span><br><span class="line">Data_ReadOrWrite(<span class="number">2</span>);</span><br><span class="line">Data_Create_New();</span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);</span><br><span class="line">Data_ReadOrWrite(<span class="number">1</span>);</span><br><span class="line">Data_Read();</span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"done.\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ISCMD(<span class="string">"save"</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Are you sure to quit with saving? (y/n): "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, a);</span><br><span class="line"><span class="keyword">if</span>(ISCMD(<span class="string">"y"</span>) || ISCMD(<span class="string">"Y"</span>))&#123;</span><br><span class="line">Data_Save();</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"unknown command \"%s\"\n"</span>,str);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> TRUE;<span class="comment">//继续循环 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Data_ReadOrWrite</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> t)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">switch</span>(t)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: <span class="comment">//只读 </span></span><br><span class="line">fp = fopen(<span class="string">"fat16_data.bin"</span>, <span class="string">"rb"</span>);</span><br><span class="line"><span class="keyword">return</span> fp != <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: <span class="comment">//可写 </span></span><br><span class="line">fp = fopen(<span class="string">"fat16_data.bin"</span>, <span class="string">"wb"</span>);</span><br><span class="line"><span class="keyword">return</span> fp != <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Initialize</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">if</span>(Data_ReadOrWrite(<span class="number">1</span>) == FALSE)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Disk data doesn't exist. \nCreating a new one...\n"</span>);</span><br><span class="line">Data_Create_New();</span><br><span class="line">&#125;</span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);<span class="comment">//关闭文件 </span></span><br><span class="line">Data_ReadOrWrite(<span class="number">1</span>);<span class="comment">//只读模式 </span></span><br><span class="line"></span><br><span class="line">Data_Read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Data loaded successfully.\n\n"</span>);</span><br><span class="line">Clust_now = <span class="number">1</span>;</span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Read</span><span class="params">()</span></span>&#123;</span><br><span class="line">fseek(fp, BYTES_PER_SECTOR, SEEK_CUR);<span class="comment">//跳过DBR区域 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">-1</span> + SECTORS_PER_FAT * BYTES_PER_SECTOR &gt;&gt; <span class="number">1</span>; i++)<span class="comment">//注意，这里是从0开始读 </span></span><br><span class="line">clust[i].status = (<span class="keyword">int</span>) File_Scanf_Number(<span class="number">2</span>);<span class="comment">//读取FAT1 </span></span><br><span class="line">fseek(fp, SECTORS_PER_FAT * BYTES_PER_SECTOR, SEEK_CUR);<span class="comment">//跳过FAT2</span></span><br><span class="line">fread(clust[<span class="number">1</span>].byte, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), BYTES_PER_SECTOR * SECTORS_ROOT, fp);<span class="comment">//读取根目录 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= CLUST_MAX_COUNT; i++)</span><br><span class="line">fread(clust[i].byte, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), BYTES_PER_SECTOR * SECTORS_PER_CLUST, fp);<span class="comment">//读取数据区 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Create_New</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line">Data_ReadOrWrite(<span class="number">2</span>);</span><br><span class="line">Data_DBR_Print();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">1</span>; k++)&#123;<span class="comment">//填充FAT区域 </span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0xFF</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0xFF</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= SECTORS_PER_FAT * BYTES_PER_SECTOR - <span class="number">2</span>; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fi *p = (fi*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));</span><br><span class="line">Make_a_New_File(p, TRUE);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;name[<span class="number">0</span>], <span class="string">"."</span>);</span><br><span class="line">File_Printf_32Bytes(p);</span><br><span class="line"><span class="built_in">strcpy</span>(p-&gt;name[<span class="number">0</span>], <span class="string">".."</span>);</span><br><span class="line">File_Printf_32Bytes(p);</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; (SECTORS_PER_CLUST * CLUST_MAX_COUNT) * BYTES_PER_SECTOR; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0</span>);<span class="comment">//把空扇区刷为0</span></span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Save</span><span class="params">()</span></span>&#123;</span><br><span class="line">Data_ReadOrWrite(<span class="number">2</span>);</span><br><span class="line">Data_DBR_Print();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">1</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">-1</span> + SECTORS_PER_FAT * BYTES_PER_SECTOR &gt;&gt; <span class="number">1</span>; i++)</span><br><span class="line">File_Printf_Number(clust[i].status, <span class="number">2</span>);<span class="comment">//打印FAT表，打印两份</span></span><br><span class="line">fwrite(clust[<span class="number">1</span>].byte, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), BYTES_PER_SECTOR * SECTORS_ROOT, fp);<span class="comment">//保存根目录 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= CLUST_MAX_COUNT; i++)</span><br><span class="line">fwrite(clust[i].byte, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), BYTES_PER_SECTOR * SECTORS_PER_CLUST, fp);<span class="comment">//保存数据区</span></span><br><span class="line">Data_ReadOrWrite(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">fi *<span class="title">Filelist_Search_File</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">bool</span> IsDir)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>], b[<span class="number">20</span>];</span><br><span class="line">Str_Cut_Name_Into_Two(name, a, b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(fi *p = HEAD; p != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(a, p-&gt;name[<span class="number">0</span>]) == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(b, p-&gt;name[<span class="number">1</span>]) == <span class="number">0</span> &amp;&amp; p-&gt;dir == IsDir)</span><br><span class="line"><span class="keyword">return</span> p;<span class="comment">//找到了 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;<span class="comment">//没找到 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line"><span class="keyword">for</span>(fi *p = HEAD; p != <span class="literal">NULL</span>; p = p-&gt;next)&#123;</span><br><span class="line">Date_Print(p-&gt;date);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">Time_Print(p-&gt;time);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\t\t"</span>, p-&gt;dir == TRUE?<span class="string">"&lt;DIR&gt; "</span>:<span class="string">"&lt;FILE&gt;"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,p-&gt;name[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span>(!p-&gt;dir &amp;&amp; p-&gt;name[<span class="number">1</span>][<span class="number">0</span>] != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">".%s"</span>, p-&gt;name[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Update</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(id &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">fi t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>; i++)</span><br><span class="line"><span class="keyword">if</span>(Str_Read_32Bytes(clust[id].byte + <span class="number">32</span> * i, &amp;t))&#123;<span class="comment">//如果读取成功，就申请一段新内存来存文件 </span></span><br><span class="line">fi *p = (fi *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(fi));</span><br><span class="line">*p = t;</span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">Filelist_Add_File(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!Clust_Judge_Status(clust[id].status))<span class="comment">//如果这个簇后面还有文件 就继续读取 </span></span><br><span class="line">Filelist_Update(clust[id].status);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Destroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">FileCnt = <span class="number">0</span>;</span><br><span class="line">fi *p;</span><br><span class="line"><span class="keyword">for</span>(fi *pre = HEAD; pre != <span class="literal">NULL</span>; pre= p)&#123;</span><br><span class="line">p = pre-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(pre);</span><br><span class="line">&#125;</span><br><span class="line">HEAD = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Add_File</span><span class="params">(fi *p)</span></span>&#123;</span><br><span class="line">p-&gt;next = HEAD;<span class="comment">//直接在头部添加上新结点 </span></span><br><span class="line">HEAD = p;</span><br><span class="line">FileCnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Clust_Judge_Status</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t &gt;= <span class="number">0x2</span> &amp;&amp; t &lt;= <span class="number">0xFFEF</span>) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//还有连接的簇 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="number">0xFFFF</span>) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//文件结束</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">2</span>;<span class="comment">//空簇 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Str_Read_32Bytes</span><span class="params">(<span class="keyword">char</span> *str, fi *a)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line">Str_Scanf_String(str, <span class="number">8</span>, a-&gt;name[<span class="number">0</span>]);</span><br><span class="line">Str_Scanf_String(str + <span class="number">8</span>, <span class="number">3</span>, a-&gt;name[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//这下面吧0xE5改为了-27 （ascii码相同） </span></span><br><span class="line"><span class="keyword">if</span>(a-&gt;name[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">-27</span> || a-&gt;name[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">0</span>)&#123;<span class="comment">//如果该文件已经被删除或者不存在 </span></span><br><span class="line">fseek(fp, <span class="number">21</span>, SEEK_CUR);<span class="comment">//直接跳过剩下32 - 11 = 21个字节</span></span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line">str = str + <span class="number">11</span>;</span><br><span class="line"><span class="keyword">if</span>(*str++ == <span class="number">0x10</span>) <span class="comment">//该文件是个目录 </span></span><br><span class="line">a-&gt;dir = TRUE; </span><br><span class="line"><span class="keyword">else</span> a-&gt;dir = FALSE;</span><br><span class="line"></span><br><span class="line">str += <span class="number">10</span>;<span class="comment">//跳过10个无意义字节 </span></span><br><span class="line"></span><br><span class="line">a-&gt;time = Str_Scanf_Number(str, <span class="number">2</span>);<span class="comment">//读取时间</span></span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">a-&gt;date = Str_Scanf_Number(str, <span class="number">2</span>);<span class="comment">//读取日期</span></span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">a-&gt;clust = Str_Scanf_Number(str, <span class="number">2</span>);<span class="comment">//读取首簇号</span></span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">a-&gt;len = Str_Scanf_Number(str, <span class="number">4</span>);<span class="comment">//读取文件大小 </span></span><br><span class="line">str += <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_32Bytes</span><span class="params">(fi *t)</span></span>&#123;</span><br><span class="line">File_Printf_String(t-&gt;name[<span class="number">0</span>], <span class="number">8</span>);</span><br><span class="line">File_Printf_String(t-&gt;name[<span class="number">1</span>], <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(t-&gt;dir == TRUE)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0x10</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0x20</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0xFF</span>);</span><br><span class="line">File_Printf_Number(t-&gt;time, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(t-&gt;date, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(t-&gt;clust, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(t-&gt;len, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Printf_32Bytes</span><span class="params">(<span class="keyword">char</span> *str, fi *t)</span></span>&#123;</span><br><span class="line"><span class="built_in">strncpy</span>(str, t-&gt;name[<span class="number">0</span>], <span class="number">8</span>);</span><br><span class="line">str += <span class="number">8</span>;</span><br><span class="line"><span class="built_in">strncpy</span>(str, t-&gt;name[<span class="number">1</span>], <span class="number">3</span>);</span><br><span class="line">str += <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(t-&gt;dir == TRUE)</span><br><span class="line">*str++ = <span class="number">0x10</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">*str++ = <span class="number">0x20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">*str++ = <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">Str_Printf_Number(str, t-&gt;time, <span class="number">2</span>);</span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">Str_Printf_Number(str, t-&gt;date, <span class="number">2</span>);</span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">Str_Printf_Number(str, t-&gt;clust, <span class="number">2</span>);</span><br><span class="line">str += <span class="number">2</span>;</span><br><span class="line">Str_Printf_Number(str, t-&gt;len, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Cut_Name_Into_Two</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">char</span> *a, <span class="keyword">char</span> *b)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> temp[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(temp, name);</span><br><span class="line"><span class="keyword">char</span> *t = temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(t, <span class="string">".."</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(t, <span class="string">"."</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">strcpy</span>(a, temp);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*t != <span class="number">0</span> &amp;&amp; *t != <span class="string">'.'</span>) t++;</span><br><span class="line"><span class="keyword">if</span>(*t == <span class="number">0</span>) *(t + <span class="number">1</span>) = <span class="number">0</span>;</span><br><span class="line">*t = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(a, temp);</span><br><span class="line"><span class="built_in">strcpy</span>(b, t + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Filelist_Bubble_Sort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; FileCnt; i++)</span><br><span class="line"><span class="keyword">for</span>(fi *p = HEAD; p-&gt;next != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;name[<span class="number">0</span>], p-&gt;next-&gt;name[<span class="number">0</span>]) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">fi _a, _b, *pnx;<span class="comment">//交换函数</span></span><br><span class="line">pnx = p-&gt;next;</span><br><span class="line">_a = *p;</span><br><span class="line">_b = *pnx;</span><br><span class="line"></span><br><span class="line">*p = _b;</span><br><span class="line">*pnx = _a;</span><br><span class="line">p-&gt;next = _a.next;</span><br><span class="line">pnx-&gt;next = _b.next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_DBR_Print</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c%c%c"</span>,<span class="number">0xEB</span> ,<span class="number">0x3C</span> ,<span class="number">0x90</span> );</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"ByMrh929"</span>);</span><br><span class="line">File_Printf_Number(BYTES_PER_SECTOR, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(SECTORS_PER_CLUST, <span class="number">1</span>);</span><br><span class="line">File_Printf_Number(RESERVED_SECTORS, <span class="number">2</span>);<span class="comment">//保留扇区数 </span></span><br><span class="line">File_Printf_Number(<span class="number">2</span>, <span class="number">1</span>);<span class="comment">//FAT数量</span></span><br><span class="line">File_Printf_Number(<span class="number">512</span>, <span class="number">2</span>);<span class="comment">//根目录项数 </span></span><br><span class="line">File_Printf_Number(SECTORS_PER_FAT, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(<span class="number">63</span>, <span class="number">2</span>);</span><br><span class="line">File_Printf_Number(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"FAT16   "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">475</span>; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, <span class="number">0x99</span>);</span><br><span class="line">File_Printf_Number(<span class="number">43605</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Data_Add_A_File</span><span class="params">(fi *F, <span class="keyword">int</span> id, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *p = clust[id].byte;</span><br><span class="line">p += k * <span class="number">32</span>;<span class="comment">//将指针移动到需要修改的那个文件信息之前 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> newclust = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(clust[newclust].status != <span class="number">0</span>) newclust++;<span class="comment">//寻找一个簇，用来存放文件的信息 </span></span><br><span class="line">clust[newclust].status = <span class="number">0xFFFF</span>;</span><br><span class="line"><span class="built_in">memset</span>(clust[newclust].byte, <span class="number">0</span>, <span class="keyword">sizeof</span>(clust[newclust].byte));</span><br><span class="line">F-&gt;clust = newclust;</span><br><span class="line"></span><br><span class="line">Str_Printf_32Bytes(p, F);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Printf_Number</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">long</span> <span class="keyword">long</span> sum, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">m = sum % <span class="number">256</span>;</span><br><span class="line">*str++ = m;<span class="comment">//输出一位数并且指针后移 </span></span><br><span class="line">sum /= <span class="number">256</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Str_Scanf_Number</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)&#123;</span><br><span class="line">t = *str++;<span class="comment">//读取一位并且指针后移 </span></span><br><span class="line">sum += t * (<span class="number">1</span> &lt;&lt; (i * <span class="number">8</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_Number</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> sum, <span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">m = sum % <span class="number">256</span>;</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, m);</span><br><span class="line">sum /= <span class="number">256</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">File_Scanf_Number</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)&#123; </span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">"%c"</span>, &amp;t);</span><br><span class="line">sum += t * (<span class="number">1</span> &lt;&lt; (i * <span class="number">8</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Str_Scanf_String</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> t, <span class="keyword">char</span> *dest)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; t)&#123;</span><br><span class="line"><span class="keyword">if</span>(*(str + i) != <span class="string">' '</span> &amp;&amp; *(str + i) != <span class="number">0</span>)&#123;</span><br><span class="line">*(dest + i) = *(str + i);</span><br><span class="line">i++;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">*(dest + i) = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">File_Printf_String</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">"%c"</span>, *(str + i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time_Print</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">int</span> h, m, s;</span><br><span class="line">s = (t &amp; <span class="number">0x1F</span>) * <span class="number">2</span>;<span class="comment">//取后五位 </span></span><br><span class="line">t &gt;&gt;= <span class="number">5</span>;</span><br><span class="line">m = t &amp; <span class="number">0x3F</span>;</span><br><span class="line">t &gt;&gt;= <span class="number">6</span>;</span><br><span class="line">h = t &amp; <span class="number">0x1F</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d"</span>, h, m, s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_Print</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">int</span> y, m, d;</span><br><span class="line">d = t &amp; <span class="number">0x1F</span>;</span><br><span class="line">t &gt;&gt;= <span class="number">5</span>;</span><br><span class="line">m = t &amp; <span class="number">0xF</span>;</span><br><span class="line">t &gt;&gt;= <span class="number">4</span>;</span><br><span class="line">y = (t &amp; <span class="number">0xFF</span>) + <span class="number">1980</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%04d/%02d/%02d"</span>, y, m, d);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Time_Get</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">time_t</span> t;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">lt</span>;</span></span><br><span class="line">time (&amp;t);<span class="comment">//获取Unix时间戳。</span></span><br><span class="line">    lt = localtime (&amp;t);<span class="comment">//转为时间结构。</span></span><br><span class="line"><span class="keyword">return</span> (lt-&gt;tm_hour * <span class="number">2048</span>) + (lt-&gt;tm_min * <span class="number">32</span>) + (lt-&gt;tm_sec / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_Get</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="keyword">time_t</span> t;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">lt</span>;</span></span><br><span class="line">time (&amp;t);<span class="comment">//获取Unix时间戳。</span></span><br><span class="line">    lt = localtime (&amp;t);<span class="comment">//转为时间结构。</span></span><br><span class="line">    lt-&gt;tm_year += <span class="number">1900</span>;</span><br><span class="line">    lt-&gt;tm_mon ++;<span class="comment">//0代表1月 </span></span><br><span class="line"><span class="keyword">return</span> (lt-&gt;tm_year - <span class="number">1980</span>) * <span class="number">512</span> + (lt-&gt;tm_mon * <span class="number">32</span>) + (lt-&gt;tm_mday);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dir_Change</span><span class="params">(<span class="keyword">char</span> *p, <span class="keyword">bool</span> NEW)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(NEW == FALSE)</span><br><span class="line">dir_now--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">strcpy</span>(dir[++dir_now], p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dir_Print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\\"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= dir_now; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\\"</span>,dir[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dir_Find_Empty</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>; i++)</span><br><span class="line"><span class="keyword">if</span>(clust[id].byte[i * <span class="number">32</span>] == <span class="number">-27</span> || clust[id].byte[i * <span class="number">32</span>] == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//没找到一个空位 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Make_a_New_File</span><span class="params">(fi *p, <span class="keyword">bool</span> IsDir)</span></span>&#123;</span><br><span class="line">p-&gt;clust = <span class="number">1</span>;</span><br><span class="line">p-&gt;len = <span class="number">0</span>;</span><br><span class="line">p-&gt;dir = IsDir;</span><br><span class="line">p-&gt;time = Time_Get();</span><br><span class="line">p-&gt;date = Date_Get();</span><br><span class="line">p-&gt;name[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clust_Clear_File</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[id].status) == <span class="number">0</span>)<span class="comment">//还有连接的簇 </span></span><br><span class="line">Clust_Clear_File(clust[id].status);</span><br><span class="line">clust[id].status = <span class="number">0</span>;<span class="comment">//标记为未使用 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clust_Clear_Dir</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line"><span class="comment">//先搜索这个文件夹下有哪些子文件和目录，把它们删除，然后再删除自身 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(id &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">fi t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; SECTORS_PER_CLUST * BYTES_PER_SECTOR / <span class="number">32</span>; i++)</span><br><span class="line"><span class="keyword">if</span>(Str_Read_32Bytes(clust[id].byte + <span class="number">32</span> * i, &amp;t))&#123;<span class="comment">//如果读取成功，就申请一段新内存来存文件 </span></span><br><span class="line"><span class="keyword">if</span>(t.dir == TRUE)</span><br><span class="line">Clust_Clear_Dir(t.clust);<span class="comment">//递归删除子目录</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Clust_Clear_File(t.clust);<span class="comment">//递归删除子文件</span></span><br><span class="line"></span><br><span class="line">*(clust[id].byte + <span class="number">32</span> * i) = <span class="number">0xE5</span>;<span class="comment">//标记为删除 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(Clust_Judge_Status(clust[id].status) == <span class="number">0</span>)<span class="comment">//如果这个簇后面还有文件 就继续读取 </span></span><br><span class="line">Clust_Clear_Dir(clust[id].status);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Manu_Print</span><span class="params">()</span></span>&#123;<span class="comment">//done</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"This system supports the following commands:\n\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"ls/dir\t\t\t\t\tShow the files and folders contained.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"cd [DIR]\t\t\t\tEnter an appinted folder.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"mkdir [DIR]\t\t\t\tCreate a folder.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"create [NAME]\t\t\t\tCreate a file.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"rmdir [DIR]\t\t\t\tDelete a folder.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"rm [NAME]\t\t\t\tDelete a file.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"read [NAME]\t\t\t\tRead a file.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"write [NAME]\t\t\t\tWrite a file.\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"format\t\t\t\t\tFormat this disk.(be careful)\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"save\t\t\t\t\tSave this disk and quit.(without which you'll lose your data)\n\n\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="project" scheme="https://mrh1s.top/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>排序算法的一点小心得</title>
    <link href="https://mrh1s.top/posts/e0221437/"/>
    <id>https://mrh1s.top/posts/e0221437/</id>
    <published>2019-01-09T07:01:14.000Z</published>
    <updated>2019-05-08T14:21:38.588Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>手写了两种排序算法，但是写快排的时候，数据一大就开始死循环 原来是我判断循环跳出条件那个地方出了一点问题，cmp函数里面我写的时候当a&lt;b时才返回真，而当a==b时，程序会认为两个元素需要交换，从而无限次地交换，死循环</p></blockquote><p>一句话总结：快排一定要 跳过两个元素相等的情况</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">int</span> a[MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_array</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        a[i] = rand() % <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n - i; j++)</span><br><span class="line">            <span class="keyword">if</span>(!cmp(a[j], a[j + <span class="number">1</span>])) swap(a[j], a[j + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s &gt;= e ) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = s, j = e;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    下方while中，如果两个元素相等，必须跳过，因为一旦不跳过</span></span><br><span class="line"><span class="comment">    程序将陷入死循环 </span></span><br><span class="line"><span class="comment">    即加上 a[i]==a[j]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">        <span class="keyword">while</span>(i &lt; j &amp;&amp; cmp(a[i], a[j]) || a[i] == a[j]) j--;</span><br><span class="line">        swap(a[i], a[j]);</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j &amp;&amp; cmp(a[i], a[j]) || a[i] == a[j]) i++;</span><br><span class="line">        swap(a[i], a[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(s, i<span class="number">-1</span>);</span><br><span class="line">    quick_sort(i+<span class="number">1</span>, e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> n,CHOICE;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    set_array(n);</span><br><span class="line">    print(n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;CHOICE);</span><br><span class="line">    <span class="keyword">switch</span>(CHOICE)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">            bubble_sort(n);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">            quick_sort(<span class="number">1</span>, n);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print(n);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="c-learn" scheme="https://mrh1s.top/categories/c-learn/"/>
    
    
  </entry>
  
  <entry>
    <title>网安课答辩-比特币与区块链</title>
    <link href="https://mrh1s.top/posts/3cf48918/"/>
    <id>https://mrh1s.top/posts/3cf48918/</id>
    <published>2019-01-03T09:35:21.000Z</published>
    <updated>2019-05-04T15:39:44.418Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>\<div class="row">    <embed src="/uploads/bitcoinblockchain.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="project" scheme="https://mrh1s.top/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>记第一次电脑组装（二）</title>
    <link href="https://mrh1s.top/posts/1879b15e/"/>
    <id>https://mrh1s.top/posts/1879b15e/</id>
    <published>2018-12-31T06:13:12.000Z</published>
    <updated>2019-05-04T15:39:44.417Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="组装系统"><a href="#组装系统" class="headerlink" title="组装系统"></a>组装系统</h3><blockquote><p>这一步通常特别简单，但是我整整弄了一天</p></blockquote><p>第一步是在其他电脑上下载老毛桃装机软件，制作U盘镜像 第二步将U盘插入电脑，设置U盘引导启动 便会进入PE维护系统 首先新硬盘是没有分区的，我们打开disk genious</p><p> <a href><img src="/images/IMG_20181229_184307.jpg" alt></a> </p><p>选择自己的硬盘 点击快速分区，填入相关设置，一般固态硬盘分一个区就好了，机械硬盘可以多分几个区，方便分类存放文件 第三步安装Win10，老毛桃自带win10镜像下载入口，直接点击下载即可，安装至固态硬盘。</p><p> <a href><img src="/images/IMG_20181229_185242.jpg" alt></a> </p><p>等待五分钟之后，系统安装成功，准备重启！ （这里我卡了几个小时，系统安装成功但是重启之后看不到引导，让我一脸懵逼）</p><p> <a href><img src="/images/QQ图片20181231140709.png" alt></a> </p><p>最终找到原因：华硕主板需要开启CSM</p><p> <a href><img src="/images/IMG_20181231_004953.jpg" alt></a> </p><p>开启之后，硬盘引导一切正常。</p><p> <a href><img src="/images/IMG_20181231_005032.jpg" alt></a></p><p> <a href><img src="/images/IMG_20181231_005452.jpg" alt></a> </p><p><a href><img src="/images/IMG_20181231_005901.jpg" alt></a> </p><p>卸载掉所有360全家桶和垃圾软件 并激活系统 （找八国联军买激活码hhhhh，淘宝12块钱还支持联网验证）</p><p> <a href><img src="/images/IMG_20181231_011129.jpg" alt></a> </p><p><a href><img src="/images/IMG_20181231_011253.jpg" alt></a> </p><p>到这里装机就告一段落了 这是我的配置：</p><p> <a href><img src="/images/IMG_20181231_015713.jpg" alt></a></p><blockquote><p>SSD，真香！ Win10，真香！</p></blockquote><p>这次装机总共耗时两天，总归有所收获，咸鱼终于摆脱了电脑城奸商的敲诈，期待下一次的装机！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="notes" scheme="https://mrh1s.top/categories/notes/"/>
    
    
  </entry>
  
</feed>
